взяти визначення Ц;

секція ц {
  місцева дія обʼєкт_додати(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_додати(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_додати(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_додати(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_додати(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_додати(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_додати(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_додати(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_додати(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось додати");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_відняти(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_відняти(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_відняти(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_відняти(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_відняти(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_відняти(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_відняти(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_відняти(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_відняти(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось відняти");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_помножити(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_помножити(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_помножити(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_помножити(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_помножити(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_помножити(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_помножити(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_помножити(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_помножити(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось помножити");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_поділити(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_поділити(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_поділити(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_поділити(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_поділити(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_поділити(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_поділити(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_поділити(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_поділити(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_поділити_за_модулем(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_поділити_за_модулем(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_поділити_за_модулем(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_поділити_за_модулем(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_поділити_за_модулем(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_поділити_за_модулем(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_поділити_за_модулем(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_поділити_за_модулем(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_поділити_за_модулем(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити_за_модулем");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_більше(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_більше(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_більше(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_більше(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_більше(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_більше(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_більше(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_більше(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_більше(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_менше(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_менше(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_менше(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_менше(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_менше(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_менше(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_менше(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_менше(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_менше(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_більше_рівно(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_більше_рівно(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_більше_рівно(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_більше_рівно(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_більше_рівно(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_більше_рівно(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_більше_рівно(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_більше_рівно(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_більше_рівно(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше_рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_менше_рівно(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_менше_рівно(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_менше_рівно(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_менше_рівно(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_менше_рівно(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_менше_рівно(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_менше_рівно(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_менше_рівно(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_менше_рівно(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше_рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_рівно(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_рівно(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_рівно(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_рівно(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_рівно(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_рівно(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_рівно(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_рівно(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_рівно(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_не_рівно(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_не_рівно(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_не_рівно(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_не_рівно(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_не_рівно(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_не_рівно(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_не_рівно(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_не_рівно(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_не_рівно(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось не_рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_зсунути_вліво(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_зсунути_вліво(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_зсунути_вліво(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_зсунути_вліво(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_зсунути_вліво(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_зсунути_вліво(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_зсунути_вліво(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_зсунути_вліво(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_зсунути_вліво(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вліво");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_зсунути_вправо(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_зсунути_вправо(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_зсунути_вправо(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_зсунути_вправо(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_зсунути_вправо(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_зсунути_вправо(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_зсунути_вправо(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_зсунути_вправо(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_зсунути_вправо(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_зсунути_вправо_знаковий(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_зсунути_вправо_знаковий(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_зсунути_вправо_знаковий(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_зсунути_вправо_знаковий(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_зсунути_вправо_знаковий(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_зсунути_вправо_знаковий(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_зсунути_вправо_знаковий(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_зсунути_вправо_знаковий(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_зсунути_вправо_знаковий(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо_знаковий");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_ді(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_ді(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_ді(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_ді(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_ді(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_ді(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_ді(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_ді(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_ді(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось ді");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_дабо(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_дабо(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_дабо(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_дабо(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_дабо(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_дабо(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_дабо(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_дабо(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_дабо(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось дабо");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_вабо(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_вабо(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_вабо(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_вабо(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_вабо(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_вабо(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_вабо(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_вабо(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_вабо(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось вабо");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_як(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_як(обʼєкт_типу, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_як(обʼєкт_дії, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_як(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_як(обʼєкт_секції, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_як(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_як(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_як(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_як(обʼєкт_значення, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось як");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_отримати_властивість(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: адреса<ОбʼєктТипу>): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_отримати_властивість(обʼєкт_типу, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_отримати_властивість(обʼєкт_дії, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_отримати_властивість(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_отримати_властивість(обʼєкт_секції, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_отримати_властивість(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_отримати_властивість(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_отримати_властивість(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_отримати_властивість(обʼєкт_значення, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_отримати_властивість_секції(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: адреса<ОбʼєктТипу>): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_отримати_властивість_секції(обʼєкт_типу, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_отримати_властивість_секції(обʼєкт_дії, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_отримати_властивість_секції(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_отримати_властивість_секції(обʼєкт_секції, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_отримати_властивість_секції(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_отримати_властивість_секції(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_отримати_властивість_секції(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_отримати_властивість_секції(обʼєкт_значення, К, інформація_середовища, місцезнаходження, назва, очікуваний_тип);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість_секції");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_отримати_за_позицією(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, позиція: Аргумент, очікуваний_тип: адреса<ОбʼєктТипу>): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_отримати_за_позицією(обʼєкт_типу, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_отримати_за_позицією(обʼєкт_дії, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_отримати_за_позицією(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_отримати_за_позицією(обʼєкт_секції, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_отримати_за_позицією(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_отримати_за_позицією(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_отримати_за_позицією(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_отримати_за_позицією(обʼєкт_значення, К, інформація_середовища, місцезнаходження, позиція, очікуваний_тип);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_за_позицією");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_виконати(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_виконати(обʼєкт_типу, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_виконати(обʼєкт_дії, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_виконати(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_виконати(обʼєкт_секції, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_виконати(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_виконати(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_виконати(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_виконати(обʼєкт_значення, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось виконати");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_виконати_шаблон(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_виконати_шаблон(обʼєкт_типу, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_виконати_шаблон(обʼєкт_дії, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_виконати_шаблон(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_виконати_шаблон(обʼєкт_секції, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_виконати_шаблон(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_виконати_шаблон(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_виконати_шаблон(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_виконати_шаблон(обʼєкт_значення, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось виконати_шаблон");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_змінити_властивість(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, назва: памʼять<п8>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_змінити_властивість(обʼєкт_типу, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_змінити_властивість(обʼєкт_дії, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_змінити_властивість(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_змінити_властивість(обʼєкт_секції, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_змінити_властивість(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_змінити_властивість(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_змінити_властивість(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_змінити_властивість(обʼєкт_значення, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_властивість");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_змінити_в_секції(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, назва: памʼять<п8>, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_змінити_в_секції(обʼєкт_типу, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_змінити_в_секції(обʼєкт_дії, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_змінити_в_секції(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_змінити_в_секції(обʼєкт_секції, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_змінити_в_секції(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_змінити_в_секції(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_змінити_в_секції(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_змінити_в_секції(обʼєкт_значення, К, інформація_середовища, місцезнаходження, назва, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_в_секції");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_змінити_за_позицією(я: Обʼєкт, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, позиція: Аргумент, аргумент: Аргумент): Результат {
    якщо я.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = я.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_змінити_за_позицією(обʼєкт_типу, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    якщо я.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = я.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_змінити_за_позицією(обʼєкт_дії, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    якщо я.вид == ВидОбʼєктаГрупаДій {
      ціль обʼєкт_групи_дій = я.дані як адреса<ОбʼєктГрупиДій>;
      вернути обʼєкт_групи_дій_змінити_за_позицією(обʼєкт_групи_дій, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = я.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_змінити_за_позицією(обʼєкт_секції, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    якщо я.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = я.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_змінити_за_позицією(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    якщо я.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = я.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_змінити_за_позицією(обʼєкт_сирого_значення, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    якщо я.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = я.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_змінити_за_позицією(обʼєкт_незавантаженого_значення, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    якщо я.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = я.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_змінити_за_позицією(обʼєкт_значення, К, інформація_середовища, місцезнаходження, позиція, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_за_позицією");
    вернути результат_помилка(помилка_компіляції);
  }
}
