взяти визначення Ц;

секція ц {
  місцева дія обʼєкт_групи_дій_додати(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось додати");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_відняти(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось відняти");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_помножити(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось помножити");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_поділити(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_поділити_за_модулем(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити_за_модулем");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_більше(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_менше(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_більше_рівно(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше_рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_менше_рівно(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше_рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_рівно(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_не_рівно(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось не_рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_зсунути_вліво(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вліво");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_зсунути_вправо(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_зсунути_вправо_знаковий(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо_знаковий");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_ді(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось ді");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_дабо(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось дабо");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_вабо(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось вабо");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_як(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось як");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_отримати_властивість(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: комірка<ОбʼєктГрупиДій>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_отримати_властивість_секції(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: комірка<ОбʼєктГрупиДій>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість_секції");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_отримати_за_позицією(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, позиція: Обʼєкт, очікуваний_тип: комірка<ОбʼєктГрупиДій>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_за_позицією");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_виконати(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): Результат {
    ціль скомпільовані_типи_аргументів = виділити_список<комірка<ОбʼєктТипу>>();
//    відкласти звільнити_список(скомпільовані_типи_аргументів);
    змінна ах: позитивне = 0;
    поки ах < кількість_аргументів {
      ціль аргумент = аргументи[ах];
      ціль результат_значення_аргумента = отримати_як_значення(К, інформація_середовища, місцезнаходження, аргумент.обʼєкт, пусто);
      якщо результат_значення_аргумента.помилка != пусто {
        вернути Результат { помилка = результат_значення_аргумента.помилка };
      }
      ціль обʼєкт_значення_аргумента = результат_значення_аргумента.обʼєкт_значення;
      аргумент.обʼєкт = Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення_аргумента };
      додати_до_списку<комірка<ОбʼєктТипу>>(скомпільовані_типи_аргументів, обʼєкт_значення_аргумента.тип);
      ах = ах + 1;
    }
    змінна знайдений_обʼєкт_дії: комірка<ОбʼєктДії> = пусто;
    змінна дх: позитивне = 0;
    поки дх < обʼєкт_групи_дій.обʼєкти_дій.довжина {
      ціль обʼєкт_дії = обʼєкт_групи_дій.обʼєкти_дій.дані[дх];
      якщо обʼєкт_дії.параметри.довжина == кількість_аргументів {
        змінна пх: позитивне = 0;
        змінна кількість_норм_аргументів: позитивне = 0;
        поки пх < обʼєкт_дії.параметри.довжина {
          якщо перевірити_тип(обʼєкт_дії.параметри.дані[пх].тип, скомпільовані_типи_аргументів.дані[пх]) == так {
            кількість_норм_аргументів = кількість_норм_аргументів + 1;
          }
          пх = пх + 1;
        }
        якщо кількість_норм_аргументів == обʼєкт_дії.параметри.довжина {
          знайдений_обʼєкт_дії = обʼєкт_дії;
        }
      }
      дх = дх + 1;
    }
    якщо знайдений_обʼєкт_дії == пусто {
      ціль помилка_компіляції = виділити_помилку_компіляції_не_вдалось_знайти_відповідну_дію(місцезнаходження);
      вернути Результат { помилка = помилка_компіляції };
    }
    вернути обʼєкт_дії_виконати(знайдений_обʼєкт_дії, К, інформація_середовища, місцезнаходження, кількість_аргументів, аргументи);
  }
}

секція ц {
  місцева дія обʼєкт_групи_дій_змінити_властивість(обʼєкт_групи_дій: комірка<ОбʼєктГрупиДій>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_властивість");
    вернути Результат { помилка = помилка_компіляції };
  }
}