структура ЛМодуль;
структура ЛТип;
структура ЛФункція;
структура ЛТипФункції;
структура ЛЗначення;
структура ЛБлок;

зовнішня дія xlm_create(назва: памʼять<п8>): комірка<ЛМодуль>;
зовнішня дія dumpLL(Л: комірка<ЛМодуль>): памʼять<п8>;

зовнішня дія tsil_llvm_create_struct(Л: комірка<ЛМодуль>, назва: памʼять<п8>): комірка<ЛТип>;
зовнішня дія tsil_llvm_set_struct_fields(Л: комірка<ЛМодуль>, с: комірка<ЛТип>, розмір_полів: позитивне, поля: памʼять<комірка<ЛТип>>);

зовнішня дія tsil_llvm_declare_function(Л: комірка<ЛМодуль>, лінкування: позитивне, назва: памʼять<п8>, тип_повернення: комірка<ЛТип>, розмір_параметрів: позитивне, параметри: памʼять<комірка<ЛТип>>, варарг: позитивне): комірка<ЛФункція>;
зовнішня дія tsil_llvm_create_function_block(Л: комірка<ЛМодуль>, функція: комірка<ЛФункція>, назва: памʼять<п8>): комірка<ЛБлок>;

зовнішня дія tsil_llvm_inst_alloca(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, назва: памʼять<п8>, тип: комірка<ЛТип>): комірка<ЛЗначення>;
зовнішня дія tsil_llvm_inst_store(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, значення: комірка<ЛЗначення>, алока: комірка<ЛЗначення>);
зовнішня дія tsil_llvm_inst_load(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, тип: комірка<ЛТип>, значення: комірка<ЛЗначення>): комірка<ЛЗначення>;
зовнішня дія tsil_llvm_inst_br(Л: комірка<ЛМодуль>, звідки: комірка<ЛБлок>, куда: комірка<ЛБлок>);
зовнішня дія tsil_llvm_inst_ret(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, значення: комірка<ЛЗначення>);
зовнішня дія tsil_llvm_inst_getelementptr(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, тип: комірка<ЛТип>, значення: комірка<ЛЗначення>, кількість_позицій: позитивне, позиції: памʼять<комірка<ЛЗначення>>): комірка<ЛЗначення>;

зовнішня дія tsil_llvm_get_null(Л: комірка<ЛМодуль>): комірка<ЛЗначення>;
зовнішня дія tsil_llvm_get_void_type(Л: комірка<ЛМодуль>): комірка<ЛТип>;
зовнішня дія tsil_llvm_get_pointer_type(Л: комірка<ЛМодуль>): комірка<ЛТип>;
зовнішня дія tsil_llvm_get_int1_type(Л: комірка<ЛМодуль>): комірка<ЛТип>;
зовнішня дія tsil_llvm_get_int8_type(Л: комірка<ЛМодуль>): комірка<ЛТип>;
зовнішня дія tsil_llvm_get_int16_type(Л: комірка<ЛМодуль>): комірка<ЛТип>;
зовнішня дія tsil_llvm_get_int32_type(Л: комірка<ЛМодуль>): комірка<ЛТип>;
зовнішня дія tsil_llvm_get_int64_type(Л: комірка<ЛМодуль>): комірка<ЛТип>;

зовнішня дія tsil_llvm_create_int32(Л: комірка<ЛМодуль>, значення: ц64): комірка<ЛЗначення>;
зовнішня дія tsil_llvm_create_int64(Л: комірка<ЛМодуль>, значення: ц64): комірка<ЛЗначення>;

зовнішня дія tsil_llvm_get_function_type(Л: комірка<ЛМодуль>, функція: комірка<ЛФункція>): комірка<ЛТипФункції>;

зовнішня дія tsil_llvm_inst_call_value(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, тип: комірка<ЛТип>, значення: комірка<ЛЗначення>, розмір_аргументів: позитивне, аргументи: памʼять<комірка<ЛЗначення>>): комірка<ЛЗначення>;
зовнішня дія tsil_llvm_get_function_arg_value(Л: комірка<ЛМодуль>, функція: комірка<ЛФункція>, позиція: позитивне): комірка<ЛЗначення>;

секція LLVM {
  синонім LINKAGE_EXTERNAL = 0;
  синонім LINKAGE_DSO_LOCAL = 1;
  синонім LINKAGE_INTERNAL = 2;

  дія створити(назва: памʼять<п8>): комірка<ЛМодуль> {
    вернути xlm_create(назва);
  }

  дія відмалювати(Л: комірка<ЛМодуль>): памʼять<п8> {
    вернути dumpLL(Л);
  }

  дія struct(Л: комірка<ЛМодуль>, назва: памʼять<п8>): комірка<ЛТип> {
    вернути tsil_llvm_create_struct(Л, назва);
  }

  дія struct_set_fields(Л: комірка<ЛМодуль>, с: комірка<ЛТип>, розмір_полів: позитивне, поля: памʼять<комірка<ЛТип>>) {
    tsil_llvm_set_struct_fields(Л, с, розмір_полів, поля);
  }

  дія function(Л: комірка<ЛМодуль>, лінкування: позитивне, назва: памʼять<п8>, тип_повернення: комірка<ЛТип>, розмір_параметрів: позитивне, параметри: памʼять<комірка<ЛТип>>, варарг: позитивне): комірка<ЛФункція> {
    вернути tsil_llvm_declare_function(Л, лінкування, назва, тип_повернення, розмір_параметрів, параметри, варарг);
  }

  дія створити_блок(Л: комірка<ЛМодуль>, функція: комірка<ЛФункція>, назва: памʼять<п8>): комірка<ЛБлок> {
    вернути tsil_llvm_create_function_block(Л, функція, назва);
  }

  дія alloca(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, назва: памʼять<п8>, тип: комірка<ЛТип>): комірка<ЛЗначення> {
    вернути tsil_llvm_inst_alloca(Л, блок, назва, тип);
  }

  дія store(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, значення: комірка<ЛЗначення>, алока: комірка<ЛЗначення>) {
    tsil_llvm_inst_store(Л, блок, значення, алока);
  }

  дія load(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, тип: комірка<ЛТип>, значення: комірка<ЛЗначення>): комірка<ЛЗначення> {
    вернути tsil_llvm_inst_load(Л, блок, тип, значення);
  }

  дія br(Л: комірка<ЛМодуль>, звідки: комірка<ЛБлок>, куда: комірка<ЛБлок>) {
    tsil_llvm_inst_br(Л, звідки, куда);
  }

  дія ret(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, значення: комірка<ЛЗначення>) {
    tsil_llvm_inst_ret(Л, блок, значення);
  }

  дія getelementptr(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, тип: комірка<ЛТип>, значення: комірка<ЛЗначення>, кількість_позицій: позитивне, позиції: памʼять<комірка<ЛЗначення>>): комірка<ЛЗначення> {
    вернути tsil_llvm_inst_getelementptr(Л, блок, тип, значення, кількість_позицій, позиції);
  }

  дія call(Л: комірка<ЛМодуль>, блок: комірка<ЛБлок>, тип: комірка<ЛТип>, значення: комірка<ЛЗначення>, розмір_аргументів: позитивне, аргументи: памʼять<комірка<ЛЗначення>>): комірка<ЛЗначення> {
    вернути tsil_llvm_inst_call_value(Л, блок, тип, значення, розмір_аргументів, аргументи);
  }

  дія null(Л: комірка<ЛМодуль>): комірка<ЛЗначення> {
    вернути tsil_llvm_get_null(Л);
  }

  дія void(Л: комірка<ЛМодуль>): комірка<ЛТип> {
    вернути tsil_llvm_get_void_type(Л);
  }

  дія pointer(Л: комірка<ЛМодуль>): комірка<ЛТип> {
    вернути tsil_llvm_get_pointer_type(Л);
  }

  дія і1(Л: комірка<ЛМодуль>): комірка<ЛТип> {
    вернути tsil_llvm_get_int1_type(Л);
  }

  дія і8(Л: комірка<ЛМодуль>): комірка<ЛТип> {
    вернути tsil_llvm_get_int8_type(Л);
  }

  дія і16(Л: комірка<ЛМодуль>): комірка<ЛТип> {
    вернути tsil_llvm_get_int16_type(Л);
  }

  дія і32(Л: комірка<ЛМодуль>): комірка<ЛТип> {
    вернути tsil_llvm_get_int32_type(Л);
  }

  дія і64(Л: комірка<ЛМодуль>): комірка<ЛТип> {
    вернути tsil_llvm_get_int64_type(Л);
  }

  дія const_int32(Л: комірка<ЛМодуль>, значення: ц32): комірка<ЛЗначення> {
    вернути tsil_llvm_create_int32(Л, значення);
  }

  дія const_int64(Л: комірка<ЛМодуль>, значення: ц64): комірка<ЛЗначення> {
    вернути tsil_llvm_create_int64(Л, значення);
  }

  дія type_of_function(Л: комірка<ЛМодуль>, функція: комірка<ЛФункція>): комірка<ЛТипФункції> {
    вернути tsil_llvm_get_function_type(Л, функція);
  }

  дія function_arg(Л: комірка<ЛМодуль>, функція: комірка<ЛФункція>, позиція: позитивне): комірка<ЛЗначення> {
    вернути tsil_llvm_get_function_arg_value(Л, функція, позиція);
  }
}