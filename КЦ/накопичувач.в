взяти визначення ./біб;

структура Накопичувач<Т>;

структура Накопичувач<Т> {
  розмір: позитивне;
  дані: памʼять<Т>;
}

дія зробити_накопичувач<Т>(): Накопичувач<Т> {
  ціль накопичувач: Накопичувач<Т>;
  накопичувач.розмір = 0;
  накопичувач.дані = пусто;
  вернути накопичувач;
}

дія виділити_накопичувач<Т>(): адреса<Накопичувач<Т>> {
  ціль накопичувач = виділити<Накопичувач<Т>>();
  накопичувач.розмір = 0;
  накопичувач.дані = пусто;
  вернути накопичувач;
}

дія покласти_в_накопичувач<Т>(накопичувач: адреса<Накопичувач<Т>>, дані: Т) {
  накопичувач.дані = перевиділити<Т>(накопичувач.дані, ц32(накопичувач.розмір + 1));
  накопичувач.дані[накопичувач.розмір] = дані;
  накопичувач.розмір = накопичувач.розмір + 1;
}

дія забрати_з_накопичувача<Т>(накопичувач: адреса<Накопичувач<Т>>): Т {
  ціль дані = накопичувач.дані[накопичувач.розмір - 1];
  накопичувач.розмір = накопичувач.розмір - 1;
  вернути дані;
}

дія звільнити_значення_накопичувача<Т>(накопичувач: Накопичувач<Т>) {
  звільнити(накопичувач.дані);
}

дія звільнити_накопичувач<Т>(накопичувач: адреса<Накопичувач<Т>>) {
  звільнити(накопичувач.дані);
  звільнити(накопичувач);
}

дія обернути_накопичувач<Т>(накопичувач: адреса<Накопичувач<Т>>) {
  якщо накопичувач.розмір == 0 {
    вернути;
  }
  змінна ціль па: позитивне = 0;
  змінна ціль пб: позитивне = накопичувач.розмір - 1;
  поки па < пб {
    змінна ціль тимчасове = накопичувач.дані[па];
    накопичувач.дані[па] = накопичувач.дані[пб];
    накопичувач.дані[пб] = тимчасове;
    па += 1;
    пб -= 1;
  }
}

дія зробити_копію_накопичувача<Т>(накопичувач: Накопичувач<Т>): Накопичувач<Т> {
  ціль копія = зробити_накопичувач<Т>();
  копія.розмір = накопичувач.розмір;
  копія.дані = виділити<Т>(ц32(копія.розмір));
  змінна ціль п: позитивне = 0;
  поки п < копія.розмір {
    копія.дані[п] = накопичувач.дані[п];
    п += 1;
  }
  вернути копія;
}

дія розширити_накопичувач<Т>(накопичувач: адреса<Накопичувач<Т>>, розмір: позитивне, пусте_значення: Т) {
  якщо розмір <= накопичувач.розмір {
    вернути;
  }
  накопичувач.дані = перевиділити<Т>(накопичувач.дані, ц32(розмір));
  змінна ціль п: позитивне = накопичувач.розмір;
  поки п < розмір {
    накопичувач.дані[п] = пусте_значення;
    п += 1;
  }
  накопичувач.розмір = розмір;
}

дія видалити_з_накопичувача<Т>(накопичувач: адреса<Накопичувач<Т>>, позиція: позитивне): логічне {
  якщо позиція >= накопичувач.розмір {
    вернути ні;
  }
  змінна ціль п: позитивне = позиція;
  поки п < накопичувач.розмір - 1 {
    накопичувач.дані[п] = накопичувач.дані[п + 1];
    п += 1;
  }
  накопичувач.розмір = накопичувач.розмір - 1;
  вернути так;
}