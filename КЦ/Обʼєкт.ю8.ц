взяти визначення КЦ;

секція КЦ {
  зовнішня дія обʼєкт_додати(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_додати(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_додати(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_додати(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_додати(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_додати(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_додати(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_додати(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_відняти(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_відняти(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_відняти(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_відняти(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_відняти(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_відняти(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_відняти(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_відняти(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_помножити(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_помножити(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_помножити(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_помножити(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_помножити(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_помножити(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_помножити(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_помножити(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_поділити(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_поділити(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_поділити(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_поділити(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_поділити(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_поділити(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_поділити(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_поділити(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_поділити_за_модулем(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_поділити_за_модулем(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_поділити_за_модулем(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_поділити_за_модулем(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_поділити_за_модулем(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_поділити_за_модулем(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_поділити_за_модулем(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_поділити_за_модулем(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_більше(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_більше(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_більше(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_більше(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_більше(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_більше(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_більше(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_більше(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_менше(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_менше(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_менше(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_менше(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_менше(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_менше(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_менше(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_менше(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_більше_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_більше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_більше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_більше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_більше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_більше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_більше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_більше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_менше_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_менше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_менше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_менше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_менше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_менше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_менше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_менше_рівно(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_рівно(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_рівно(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_рівно(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_рівно(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_рівно(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_рівно(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_рівно(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_не_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_не_рівно(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_не_рівно(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_не_рівно(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_не_рівно(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_не_рівно(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_не_рівно(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_не_рівно(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_зсунути_вліво(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_зсунути_вліво(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_зсунути_вліво(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_зсунути_вліво(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_зсунути_вліво(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_зсунути_вліво(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_зсунути_вліво(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_зсунути_вліво(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_зсунути_вправо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_зсунути_вправо(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_зсунути_вправо(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_зсунути_вправо(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_зсунути_вправо(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_зсунути_вправо(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_зсунути_вправо(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_зсунути_вправо(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_ді(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_ді(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_ді(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_ді(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_ді(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_ді(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_ді(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_ді(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_дабо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_дабо(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_дабо(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_дабо(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_дабо(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_дабо(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_дабо(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_дабо(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_вабо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_вабо(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_вабо(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_вабо(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_вабо(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_вабо(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_вабо(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_вабо(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_як(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_як(компілятор, контекст, місцезнаходження, обʼєкт_типу, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_як(компілятор, контекст, місцезнаходження, обʼєкт_дії, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_як(компілятор, контекст, місцезнаходження, обʼєкт_секції, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_як(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_як(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_як(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_як(компілятор, контекст, місцезнаходження, обʼєкт_значення, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_отримати_властивість(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, назва: Назва, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_отримати_властивість(компілятор, контекст, місцезнаходження, обʼєкт_типу, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_отримати_властивість(компілятор, контекст, місцезнаходження, обʼєкт_дії, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_отримати_властивість(компілятор, контекст, місцезнаходження, обʼєкт_секції, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_отримати_властивість(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_отримати_властивість(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_отримати_властивість(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_отримати_властивість(компілятор, контекст, місцезнаходження, обʼєкт_значення, назва, очікуваний_тип);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_отримати_властивість_секції(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, назва: Назва, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_отримати_властивість_секції(компілятор, контекст, місцезнаходження, обʼєкт_типу, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_отримати_властивість_секції(компілятор, контекст, місцезнаходження, обʼєкт_дії, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_отримати_властивість_секції(компілятор, контекст, місцезнаходження, обʼєкт_секції, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_отримати_властивість_секції(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_отримати_властивість_секції(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_отримати_властивість_секції(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, назва, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_отримати_властивість_секції(компілятор, контекст, місцезнаходження, обʼєкт_значення, назва, очікуваний_тип);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_отримати_за_позицією(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, позиція: Аргумент, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_отримати_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_типу, позиція, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_отримати_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_дії, позиція, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_отримати_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_секції, позиція, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_отримати_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, позиція, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_отримати_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, позиція, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_отримати_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, позиція, очікуваний_тип);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_отримати_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_значення, позиція, очікуваний_тип);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_виконати(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_виконати(компілятор, контекст, місцезнаходження, обʼєкт_типу, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_виконати(компілятор, контекст, місцезнаходження, обʼєкт_дії, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_виконати(компілятор, контекст, місцезнаходження, обʼєкт_секції, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_виконати(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_виконати(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_виконати(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_виконати(компілятор, контекст, місцезнаходження, обʼєкт_значення, кількість_аргументів, аргументи);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_виконати_шаблон(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_виконати_шаблон(компілятор, контекст, місцезнаходження, обʼєкт_типу, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_виконати_шаблон(компілятор, контекст, місцезнаходження, обʼєкт_дії, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_виконати_шаблон(компілятор, контекст, місцезнаходження, обʼєкт_секції, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_виконати_шаблон(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_виконати_шаблон(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_виконати_шаблон(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, кількість_аргументів, аргументи);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_виконати_шаблон(компілятор, контекст, місцезнаходження, обʼєкт_значення, кількість_аргументів, аргументи);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_змінити_властивість(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, назва: Назва, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_змінити_властивість(компілятор, контекст, місцезнаходження, обʼєкт_типу, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_змінити_властивість(компілятор, контекст, місцезнаходження, обʼєкт_дії, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_змінити_властивість(компілятор, контекст, місцезнаходження, обʼєкт_секції, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_змінити_властивість(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_змінити_властивість(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_змінити_властивість(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_змінити_властивість(компілятор, контекст, місцезнаходження, обʼєкт_значення, назва, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_змінити_в_секції(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, назва: Назва, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_змінити_в_секції(компілятор, контекст, місцезнаходження, обʼєкт_типу, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_змінити_в_секції(компілятор, контекст, місцезнаходження, обʼєкт_дії, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_змінити_в_секції(компілятор, контекст, місцезнаходження, обʼєкт_секції, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_змінити_в_секції(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_змінити_в_секції(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_змінити_в_секції(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, назва, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_змінити_в_секції(компілятор, контекст, місцезнаходження, обʼєкт_значення, назва, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_змінити_за_позицією(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт, позиція: Аргумент, аргумент: Аргумент): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_змінити_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_типу, позиція, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_змінити_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_дії, позиція, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_змінити_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_секції, позиція, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_змінити_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_шаблону, позиція, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_змінити_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення, позиція, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_змінити_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення, позиція, аргумент);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_змінити_за_позицією(компілятор, контекст, місцезнаходження, обʼєкт_значення, позиція, аргумент);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }

  зовнішня дія обʼєкт_унарний_мінус(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт: Обʼєкт): РезультатОбʼєкта {
    якщо обʼєкт.вид == ВидОбʼєктаТип {
      ціль обʼєкт_типу = обʼєкт.дані як адреса<ОбʼєктТипу>;
      вернути обʼєкт_типу_унарний_мінус(компілятор, контекст, місцезнаходження, обʼєкт_типу);
    }
    якщо обʼєкт.вид == ВидОбʼєктаДія {
      ціль обʼєкт_дії = обʼєкт.дані як адреса<ОбʼєктДії>;
      вернути обʼєкт_дії_унарний_мінус(компілятор, контекст, місцезнаходження, обʼєкт_дії);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСекція {
      ціль обʼєкт_секції = обʼєкт.дані як адреса<ОбʼєктСекції>;
      вернути обʼєкт_секції_унарний_мінус(компілятор, контекст, місцезнаходження, обʼєкт_секції);
    }
    якщо обʼєкт.вид == ВидОбʼєктаШаблон {
      ціль обʼєкт_шаблону = обʼєкт.дані як адреса<ОбʼєктШаблону>;
      вернути обʼєкт_шаблону_унарний_мінус(компілятор, контекст, місцезнаходження, обʼєкт_шаблону);
    }
    якщо обʼєкт.вид == ВидОбʼєктаСиреЗначення {
      ціль обʼєкт_сирого_значення = обʼєкт.дані як ОбʼєктСирогоЗначення;
      вернути обʼєкт_сирого_значення_унарний_мінус(компілятор, контекст, місцезнаходження, обʼєкт_сирого_значення);
    }
    якщо обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      вернути обʼєкт_незавантаженого_значення_унарний_мінус(компілятор, контекст, місцезнаходження, обʼєкт_незавантаженого_значення);
    }
    якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      вернути обʼєкт_значення_унарний_мінус(компілятор, контекст, місцезнаходження, обʼєкт_значення);
    }
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження,"Не вдалось скомпілювати");
  }
}
