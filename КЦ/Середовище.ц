взяти визначення Ц;

секція ц {
  місцева дія порівняти_ю8(а: памʼять<п8>, б: памʼять<п8>): логічне {
    змінна символ_: п8 = а[0];
    змінна х: позитивне = 0;
    поки символ_ != 0 {
      якщо символ_ != б[х] {
        вернути ні;
      }
      х = х + 1;
      символ_ = а[х];
    }
    якщо б[х] != 0 {
      вернути ні;
    }
    вернути так;
  }

  місцева дія створити_середовище(вище: комірка<Середовище>): комірка<Середовище> {
    ціль середовище = виділити<Середовище>();
    середовище.вище = вище;
    середовище.субʼєкти = виділити_карту<памʼять<п8>, Обʼєкт>(порівняти_ю8);
    середовище.обʼєкт_секції = пусто;
    вернути середовище;
  }

  місцева дія отримати_зі_середовища(середовище: комірка<Середовище>, назва: памʼять<п8>, куда_записати: комірка<Обʼєкт>): логічне {
    ціль останнє_середовище = середовище;
    поки останнє_середовище != пусто {
      ціль обʼєкт = отримати_значення_з_карти<памʼять<п8>, Обʼєкт>(останнє_середовище.субʼєкти, назва, Обʼєкт { 0 });
      якщо обʼєкт.вид != 0 {
        куда_записати.вид = обʼєкт.вид;
        якщо обʼєкт.вид == ВидОбʼєктаЗначення {
          куда_записати.дані = обʼєкт.дані як ОбʼєктЗначення;
        } якщо обʼєкт.вид == ВидОбʼєктаНезавантаженогоЗначення {
          куда_записати.дані = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
        } якщо обʼєкт.вид == ВидОбʼєктаСирогоЗначення {
          куда_записати.дані = обʼєкт.дані як ОбʼєктСирогоЗначення;
        } інакше {
          куда_записати.дані = обʼєкт.дані як комірка<ОбʼєктТипу>;
        }
        вернути так;
      }
      останнє_середовище = останнє_середовище.вище;
    }
    вернути ні;
  }

  місцева дія отримати_з_локального_середовища(середовище: комірка<Середовище>, назва: памʼять<п8>, куда_записати: комірка<Обʼєкт>): логічне {
    ціль обʼєкт = отримати_значення_з_карти<памʼять<п8>, Обʼєкт>(середовище.субʼєкти, назва, Обʼєкт { 0 });
    якщо обʼєкт.вид != 0 {
      куда_записати.вид = обʼєкт.вид;
        якщо обʼєкт.вид == ВидОбʼєктаЗначення {
          куда_записати.дані = обʼєкт.дані як ОбʼєктЗначення;
        } якщо обʼєкт.вид == ВидОбʼєктаНезавантаженогоЗначення {
          куда_записати.дані = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
        } якщо обʼєкт.вид == ВидОбʼєктаСирогоЗначення {
          куда_записати.дані = обʼєкт.дані як ОбʼєктСирогоЗначення;
        } інакше {
          куда_записати.дані = обʼєкт.дані як комірка<ОбʼєктТипу>;
        }
      вернути так;
    }
    вернути ні;
  }

  місцева дія змінити_в_середовищі(середовище: комірка<Середовище>, назва: памʼять<п8>, обʼєкт: Обʼєкт) {
    змінити_значення_карти<памʼять<п8>, Обʼєкт>(середовище.субʼєкти, назва, обʼєкт);
  }

  дія обʼєднати_список_ю8_обернено(значення: комірка<список<памʼять<п8>>>): памʼять<п8> {
    змінна буфер = створити_буфер_ю8();
    змінна х: ціле = (значення.довжина як ціле) - 1; // !!!! має бути цілим бо може бути відʼємним
    поки х >= 0 {
      додати_до_буфера_ю8(буфер, значення.дані[х як п64]);
      х = х - 1;
    }
    ціль результат = створити_ю8_сі_з_буфера(буфер);
    звільнити_буфер_ю8(буфер);
    вернути результат;
  }

  місцева дія отримати_повну_назву(середовище: комірка<Середовище>, назва: памʼять<п8>): памʼять<п8> {
    ціль буфер_назви = виділити_список<памʼять<п8>>();
    додати_до_списку<памʼять<п8>>(буфер_назви, назва);
    змінна останнє_середовище = середовище;
    поки останнє_середовище != пусто {
      якщо останнє_середовище.обʼєкт_секції != пусто {
        якщо останнє_середовище.обʼєкт_секції.назва != пусто {
          додати_до_списку<памʼять<п8>>(буфер_назви, ю8"::");
          додати_до_списку<памʼять<п8>>(буфер_назви, останнє_середовище.обʼєкт_секції.назва);
        }
      }
      останнє_середовище = останнє_середовище.вище;
    }
    ціль результат = обʼєднати_список_ю8_обернено(буфер_назви);
    звільнити_список<памʼять<п8>>(буфер_назви);
    вернути результат;
  }
}