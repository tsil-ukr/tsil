взяти визначення ./КЦ;

секція КЦ {
  дія перед_заміною_субʼєкта(ак: Назва, аз: Обʼєкт, бк: адреса<Назва>, бз: адреса<Обʼєкт>, аргумент: невідома_адреса) {
    змінна компілятор = аргумент як адреса<Компілятор>;

    якщо ак.вид == ВидНазвиКопія {
      звільнити_памʼять(компілятор, ак.значення.дані);
    }
  }

  дія перед_видаленням_субʼєкта(ключ: Назва, значення: Обʼєкт, аргумент: невідома_адреса) {
    змінна компілятор = аргумент як адреса<Компілятор>;

    якщо ключ.вид == ВидНазвиКопія {
      звільнити_памʼять(компілятор, ключ.значення.дані);
    }
  }

  місцева дія створити_середовище(компілятор: адреса<Компілятор>, зовнішнє: адреса<Середовище>): адреса<Середовище> {
    змінна середовище = виділити<Середовище>(компілятор);

    середовище.наступне = пусто;
    середовище.компілятор = компілятор;
    середовище.зовнішнє = зовнішнє;
    середовище.субʼєкти = біб::виділити_реєстр<Назва, Обʼєкт>(
      компілятор.виділяч,
      0,
      компілятор,
      змішати_назву_шлях_для_реєстру,
      перевірити_назви_з_реєстру,
      перед_заміною_субʼєкта,
      перед_видаленням_субʼєкта
    );
    середовище.обʼєкт_секції = пусто;
    середовище.обʼєкт_дії = пусто;

    якщо компілятор.перше_середовище == пусто {
      компілятор.перше_середовище = середовище;
    }
    якщо компілятор.останнє_середовище == пусто {
      компілятор.останнє_середовище = середовище;
    } інакше {
      компілятор.останнє_середовище.наступне = середовище;
      компілятор.останнє_середовище = середовище;
    }

    вернути середовище;
  }

  місцева дія створити_середовище_секції(компілятор: адреса<Компілятор>, зовнішнє: адреса<Середовище>, обʼєкт_секції: адреса<ОбʼєктСекції>): адреса<Середовище> {
    змінна середовище = створити_середовище(компілятор, зовнішнє);
    середовище.обʼєкт_секції = обʼєкт_секції;
    вернути середовище;
  }

  місцева дія створити_середовище_дії(компілятор: адреса<Компілятор>, зовнішнє: адреса<Середовище>, обʼєкт_дії: адреса<ОбʼєктДії>): адреса<Середовище> {
    змінна середовище = створити_середовище(компілятор, зовнішнє);
    середовище.обʼєкт_дії = обʼєкт_дії;
    вернути середовище;
  }

  місцева дія знищити_середовище(середовище: адреса<Середовище>) {
    змінна компілятор = середовище.компілятор;

    біб::звільнити_реєстр<Назва, Обʼєкт>(середовище.субʼєкти);

    звільнити(компілятор, середовище);
  }

  місцева дія змінити_в_середовищі(середовище: адреса<Середовище>, назва: Назва, обʼєкт: Обʼєкт) {
    якщо назва.вид == ВидНазвиКопія {
      назва = клонувати_назву(середовище.компілятор, назва);
    }

    біб::змінити_в_реєстрі<Назва, Обʼєкт>(середовище.субʼєкти, назва, обʼєкт);
  }

  місцева дія знайти_в_середовищі(середовище: адреса<Середовище>, назва: Назва, вихід: адреса<Обʼєкт>): логічне {
    вернути біб::знайти_в_реєстрі<Назва, Обʼєкт>(середовище.субʼєкти, назва, вихід);
  }

  місцева дія знайти_в_середовищі_рекурсивно(середовище: адреса<Середовище>, назва: Назва, вихід: адреса<Обʼєкт>): логічне {
    змінна поточне_середовище = середовище;

    поки поточне_середовище != пусто {
      якщо біб::знайти_в_реєстрі<Назва, Обʼєкт>(поточне_середовище.субʼєкти, назва, вихід) {
        вернути так;
      }

      поточне_середовище = поточне_середовище.зовнішнє;
    }

    вернути ні;
  }
}