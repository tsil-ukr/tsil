взяти визначення К;

зовнішня дія tsil_replace_backslashes(значення: памʼять<п8>): памʼять<п8>;

секція ц {
  місцева дія скомпілювати_текст(К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніЗначенняТекст>, очікуваний_тип: адреса<ОбʼєктТипу>): Результат {
    якщо дані.ідентифікатор == пусто {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Кодування Д наразі не підтримується, використовуйте ю8 (наприклад ю8\"Вперед до Цілі!\")");
      вернути результат_помилка(помилка_компіляції);
    }
    якщо strcmp(дані.ідентифікатор.значення, ю8"ю8") != 0 {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Таке кодування наразі не підтримується, використовуйте ю8 (наприклад ю8\"Вперед до Цілі!\")");
      вернути результат_помилка(помилка_компіляції);
    }
    ціль llvm_value = LLVM::const_string(К.L, tsil_replace_backslashes(дані.значення));
    якщо llvm_value == пусто {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Помилка LLVM створення тексту");
      вернути результат_помилка(помилка_компіляції);
    }
    ціль обʼєкт_типу_комірки = виділити_обʼєкт_типу(ВидТипуАдреса);
    обʼєкт_типу_комірки.тип_адреси = К.тип_п8;
    обʼєкт_типу_комірки.llvm_type = LLVM::pointer(К.L);
    ціль обʼєкт_значення: ОбʼєктЗначення;
    обʼєкт_значення.тип = обʼєкт_типу_комірки;
    обʼєкт_значення.llvm_value = llvm_value;
    вернути Результат { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
  }
}