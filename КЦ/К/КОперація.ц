взяти визначення К;

секція ц {
  місцева дія скомпілювати_операцію(К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніОперація>): Результат {
    якщо дані.операція == АСДОпераціяЄ {
      вернути скомпілювати_є(К, інформація_середовища, місцезнаходження, дані, пусто);
    }
    ціль результат_компіляції_ліво = скомпілювати_значення_як_значення(К, інформація_середовища, дані.ліво, пусто);
    якщо результат_компіляції_ліво.помилка != пусто {
      вернути результат_помилка(результат_компіляції_ліво.помилка);
    }
    змінна ціль очікуваний_тип_право = результат_компіляції_ліво.обʼєкт_значення.тип;
    ціль результат_компіляції_право = скомпілювати_значення_як_значення(К, інформація_середовища, дані.право, очікуваний_тип_право);
    якщо результат_компіляції_право.помилка != пусто {
      вернути результат_помилка(результат_компіляції_право.помилка);
    }
    ціль ліво = Обʼєкт { ВидОбʼєктаЗначення, дані = результат_компіляції_ліво.обʼєкт_значення };
    ціль право = Обʼєкт { ВидОбʼєктаЗначення, дані = результат_компіляції_право.обʼєкт_значення };
    якщо дані.операція == АСДОпераціяДодавання {
      вернути обʼєкт_додати(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяВіднімання {
      вернути обʼєкт_відняти(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяМноження {
      вернути обʼєкт_помножити(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяДілення {
      вернути обʼєкт_поділити(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяМодуль {
      вернути обʼєкт_поділити_за_модулем(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяЗсувВліво {
      вернути обʼєкт_зсунути_вліво(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяЗсувВправо {
      вернути обʼєкт_зсунути_вправо(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяЗсувВправоЗнаковий {
      вернути обʼєкт_зсунути_вправо_знаковий(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяБільше {
      вернути обʼєкт_більше(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяМенше {
      вернути обʼєкт_менше(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяБільшеРівне {
      вернути обʼєкт_більше_рівно(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяМеншеРівне {
      вернути обʼєкт_менше_рівно(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяРівне {
      вернути обʼєкт_рівно(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяНерівне {
      вернути обʼєкт_не_рівно(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяДІ {
      вернути обʼєкт_ді(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяДАБО {
      вернути обʼєкт_дабо(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяВАБО {
      вернути обʼєкт_вабо(ліво, К, інформація_середовища, місцезнаходження, Аргумент { право, дані.право.місцезнаходження });
    } інакше якщо дані.операція == АСДОпераціяІ {
      //
    } інакше якщо дані.операція == АСДОпераціяАБО {
      //
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8сі"Ця операція наразі не підтримується");
    вернути результат_помилка(помилка_компіляції);
  }
}