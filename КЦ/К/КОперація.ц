взяти визначення К;

секція ц {
  місцева дія скомпілювати_операцію(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніОперація>): Результат {
    ціль результат_компіляції_ліво = скомпілювати_значення(К, інформація_середовища, дані.ліво, пусто, так);
    якщо результат_компіляції_ліво.помилка != пусто {
      вернути Результат { помилка = результат_компіляції_ліво.помилка };
    }
    змінна очікуваний_тип_право: комірка<ОбʼєктТипу> = пусто;
    якщо результат_компіляції_ліво.обʼєкт.вид == ВидОбʼєктаЦілі {
      очікуваний_тип_право = (результат_компіляції_ліво.обʼєкт.дані як комірка<ОбʼєктЦілі>).тип;
    } інакше якщо результат_компіляції_ліво.обʼєкт.вид == ВидОбʼєктаЗначення {
      очікуваний_тип_право = (результат_компіляції_ліво.обʼєкт.дані як ОбʼєктЗначення).тип;
    }
    ціль результат_компіляції_право = скомпілювати_значення(К, інформація_середовища, дані.право, очікуваний_тип_право, так);
    якщо результат_компіляції_право.помилка != пусто {
      вернути Результат { помилка = результат_компіляції_право.помилка };
    }
    ціль ліво = результат_компіляції_ліво.обʼєкт;
    ціль право = результат_компіляції_право.обʼєкт;
    якщо дані.операція == АСДОпераціяДодавання {
      вернути обʼєкт_додати(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяВіднімання {
      вернути обʼєкт_відняти(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяМноження {
      вернути обʼєкт_помножити(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяДілення {
      вернути обʼєкт_поділити(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяМодуль {
      вернути обʼєкт_поділити_за_модулем(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяБільше {
      вернути обʼєкт_більше(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяМенше {
      вернути обʼєкт_менше(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяБільшеРівне {
      вернути обʼєкт_більше_рівно(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяМеншеРівне {
      вернути обʼєкт_менше_рівно(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяРівне {
      вернути обʼєкт_рівно(ліво, К, інформація_середовища, місцезнаходження, право);
    } інакше якщо дані.операція == АСДОпераціяНерівне {
      вернути обʼєкт_не_рівно(ліво, К, інформація_середовища, місцезнаходження, право);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Операція не підтримується");
    вернути Результат { помилка = помилка_компіляції };
  }
}