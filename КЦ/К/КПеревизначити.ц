взяти визначення К;

секція ц {
  місцева дія скомпілювати_перевизначити(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніПеревизначити>): комірка<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    ціль обʼєкт: Обʼєкт;
    ціль успіх_отримання_зі_середовища = отримати_зі_середовища(інформація_середовища.середовище, назва, обʼєкт::адреса);
    якщо успіх_отримання_зі_середовища == так {
      якщо обʼєкт.вид == ВидОбʼєктаНезавантаженогоЗначення {
        ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
        ціль тип = обʼєкт_незавантаженого_значення.тип;
        ціль результат_компіляції_значення = скомпілювати_значення_як_значення(К, інформація_середовища, дані.значення, обʼєкт_незавантаженого_значення.тип);
        якщо результат_компіляції_значення.помилка != пусто {
          вернути результат_компіляції_значення.помилка;
        }
        ціль обʼєкт_значення = результат_компіляції_значення.обʼєкт_значення;
        якщо тип.вид == ВидТипуВаріація {
          змінна знайдений_тип_варіації: комірка<ОбʼєктТипу> = пусто;
          змінна пх: позитивне = 0;
          поки пх < тип.типи_варіації.довжина {
            якщо перевірити_тип(обʼєкт_значення.тип, тип.типи_варіації.дані[пх]) == так {
              знайдений_тип_варіації = тип.типи_варіації.дані[пх];
            }
            пх = пх + 1;
          }
          якщо знайдений_тип_варіації == пусто {
            ціль помилка_компіляції = виділити_помилку_компіляції_невірний_тип_значення_цілі(місцезнаходження, назва, тип, обʼєкт_значення.тип);
            вернути помилка_компіляції;
          }
        } інакше {
          ціль результат_перевірки_типу_значення = перевірити_тип_значення_і_перетворити_якщо_треба(К, тип, обʼєкт_значення);
          якщо результат_перевірки_типу_значення.успіх == ні {
            ціль помилка_компіляції = виділити_помилку_компіляції_невірний_тип_значення_цілі(місцезнаходження, назва, тип, обʼєкт_значення.тип);
            вернути помилка_компіляції;
          }
          обʼєкт_значення = результат_перевірки_типу_значення.обʼєкт_значення;
        }
        LLVM::store(К.L, інформація_середовища.llvm_block, обʼєкт_значення.llvm_value, обʼєкт_незавантаженого_значення.llvm_value);
        вернути пусто;
      }
      ціль помилка_компіляції = виділити_помилку_компіляції_неможливо_перевизначити(місцезнаходження, назва);
      вернути помилка_компіляції;
    }
    ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_не_визначено(місцезнаходження, назва);
    вернути помилка_компіляції;
  }
}