взяти визначення К;

секція цк {
//  місцева дія скомпілювати_значення_виконати_шаблон(К: комірка<Компілятор>, блок: комірка<Блок>, інформація_виконання_шаблону: комірка<ІнформаціяВиконанняШаблону>, середовище: комірка<Середовище>, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніВиконатиШаблон>): РезультатЗначення {
//    ціль результат_компіляції_обʼєкта = скомпілювати_значення(К, блок, пусто, середовище, дані.обʼєкт);
//    якщо результат_компіляції_обʼєкта.помилка != пусто {
//      вернути РезультатЗначення { Значення {}, результат_компіляції_обʼєкта.помилка };
//    }
//
//    ціль значення = результат_компіляції_обʼєкта.значення;
//
//    якщо значення.вид == ВидЗначенняОВ {
//      ціль помилка_компіляції = створити_помилку_компіляції(дані.обʼєкт.місцезнаходження, ю8"Обʼєкт не є шаблоном");
//      вернути РезультатЗначення { Значення {}, помилка_компіляції };
//    }
//
//    ціль к = значення.к;
//    якщо к.вид == ВидОКШаблон {
//      ціль ш = к.дані як комірка<Шаблон>;
//
//      якщо дані.аргументи.довжина != ш.параметри.довжина {
//        ціль помилка_компіляції = створити_помилку_компіляції(дані.обʼєкт.місцезнаходження, ю8"Невірна кількість аргументів шаблону");
//        вернути РезультатЗначення { Значення {}, помилка_компіляції };
//      }
//
//      ціль іш = виділити<ІнформаціяВиконанняШаблону>();
//      іш.шаблон = ш;
//      іш.аргументи = виділити_список<Значення>();
//
//      ціль середовище_шаблону = створити_середовище(середовище);
//
//      змінна ах: позитивне = 0;
//      поки ах < дані.аргументи.довжина {
//        ціль аргумент = дані.аргументи.елементи[ах];
//        ціль результат_компіляції_значення_аргумента = скомпілювати_значення(К, блок, інформація_виконання_шаблону, середовище, аргумент);
//        якщо результат_компіляції_значення_аргумента.помилка != пусто {
//          вернути РезультатЗначення { Значення {}, результат_компіляції_значення_аргумента.помилка };
//        }
//        якщо результат_компіляції_значення_аргумента.значення.вид == ВидЗначенняОВ {
//          ціль помилка_компіляції = створити_помилку_компіляції(дані.обʼєкт.місцезнаходження, ю8"Аргумент не є значенням");
//          вернути РезультатЗначення { Значення {}, помилка_компіляції };
//        }
//        додати_до_списку<Значення>(іш.аргументи, результат_компіляції_значення_аргумента.значення);
//        змінити_в_середовищі(середовище_шаблону, ш.параметри.дані[ах], результат_компіляції_значення_аргумента.значення.к);
//        ах = ах + 1;
//      }
//
//      якщо перевірити_чи_карта_містить_значення<комірка<список<Значення>>, Значення>(ш.карта_готових_значень, іш.аргументи) == так {
//        ціль значення = отримати_значення_з_карти<комірка<список<Значення>>, Значення>(ш.карта_готових_значень, іш.аргументи, Значення {});
//        вернути РезультатЗначення { значення, пусто };
//      }
//
//      ціль результат_компіляції_значення_шаблона = скомпілювати_значення(К, блок, іш, середовище_шаблону, ш.асд_значення);
//      якщо результат_компіляції_значення_шаблона.помилка != пусто {
//        вернути РезультатЗначення { Значення {}, результат_компіляції_значення_шаблона.помилка };
//      }
//
//      вернути результат_компіляції_значення_шаблона;
//    }
//
//    якщо к.вид == ВидОКСпецОбʼєкт {
//      ціль спец_обʼєкт = к.дані як комірка<СпецОбʼєкт>;
//
//      ціль аргументи = виділити_список<Значення>();
//      змінна ах: позитивне = 0;
//      поки ах < дані.аргументи.довжина {
//        ціль аргумент = дані.аргументи.елементи[ах];
//        ціль результат_компіляції_значення_аргумента = скомпілювати_значення(К, блок, інформація_виконання_шаблону, середовище, аргумент);
//        якщо результат_компіляції_значення_аргумента.помилка != пусто {
//          вернути РезультатЗначення { Значення {}, результат_компіляції_значення_аргумента.помилка };
//        }
//        якщо результат_компіляції_значення_аргумента.значення.вид == ВидЗначенняОВ {
//          ціль помилка_компіляції = створити_помилку_компіляції(дані.обʼєкт.місцезнаходження, ю8"Аргумент не є значенням");
//          вернути РезультатЗначення { Значення {}, помилка_компіляції };
//        }
//        додати_до_списку<Значення>(аргументи, результат_компіляції_значення_аргумента.значення);
//        ах = ах + 1;
//      }
//
//      якщо спец_обʼєкт.виконати_шаблон != пусто {
//        вернути спец_обʼєкт.виконати_шаблон(спец_обʼєкт, К, блок, інформація_виконання_шаблону, середовище, місцезнаходження, аргументи);
//      }
//    }
//
//    ціль помилка_компіляції = створити_помилку_компіляції(дані.обʼєкт.місцезнаходження, ю8"Обʼєкт не є шаблоном");
//    вернути РезультатЗначення { Значення {}, помилка_компіляції };
//  }
}

секція ц {
  місцева дія скомпілювати_виконати_шаблон(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніВиконатиШаблон>): Результат {
    ціль результат_компіляції_обʼєкта = скомпілювати_значення(К, інформація_середовища, дані.обʼєкт, пусто);
    якщо результат_компіляції_обʼєкта.помилка != пусто {
      вернути Результат { помилка = результат_компіляції_обʼєкта.помилка };
    }
    ціль обʼєкт = результат_компіляції_обʼєкта.обʼєкт;
    якщо обʼєкт.вид == ВидОбʼєктаШаблону {
      ціль обʼєкт_шаблону = обʼєкт.дані як комірка<ОбʼєктШаблону>;
      якщо дані.аргументи.довжина != обʼєкт_шаблону.параметри.довжина {
        ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Невірна кількість аргументів шаблону");
        вернути Результат { помилка = помилка_компіляції };
      }
      ціль інформація_виконання_шаблону = виділити<ІнформаціяВиконанняШаблону>();
      інформація_виконання_шаблону.шаблон = обʼєкт_шаблону;
      інформація_виконання_шаблону.аргументи = виділити_список<комірка<ОбʼєктТипу>>();
      ціль середовище_шаблону = створити_середовище(обʼєкт_шаблону.інформація_середовища_компіляції.середовище);
      змінна ах: позитивне = 0;
      поки ах < дані.аргументи.довжина {
        ціль аргумент = дані.аргументи.елементи[ах];
        ціль результат_компіляції_значення_аргумента = скомпілювати_значення_як_тип(К, інформація_середовища, аргумент);
        якщо результат_компіляції_значення_аргумента.помилка != пусто {
          вернути Результат { помилка = результат_компіляції_значення_аргумента.помилка };
        }
        додати_до_списку<комірка<ОбʼєктТипу>>(інформація_виконання_шаблону.аргументи, результат_компіляції_значення_аргумента.обʼєкт_типу);
        змінити_в_середовищі(середовище_шаблону, обʼєкт_шаблону.параметри.дані[ах], Обʼєкт { ВидОбʼєктаТипу, дані = результат_компіляції_значення_аргумента.обʼєкт_типу });
        ах = ах + 1;
      }
      якщо перевірити_чи_карта_містить_значення<комірка<список<комірка<ОбʼєктТипу>>>, Обʼєкт>(обʼєкт_шаблону.карта_готових_значень, інформація_виконання_шаблону.аргументи) == так {
        ціль обʼєкт = отримати_значення_з_карти<комірка<список<комірка<ОбʼєктТипу>>>, Обʼєкт>(обʼєкт_шаблону.карта_готових_значень, інформація_виконання_шаблону.аргументи, Обʼєкт {});
        вернути Результат { обʼєкт, помилка = пусто };
      }
      вернути скомпілювати_значення(
        К,
        ІнформаціяСередовища {
          середовище = середовище_шаблону,
          обʼєкт_дії = обʼєкт_шаблону.інформація_середовища_компіляції.обʼєкт_дії,
          llvm_block = обʼєкт_шаблону.інформація_середовища_компіляції.llvm_block,
          інформація_виконання_шаблону = інформація_виконання_шаблону
        },
        обʼєкт_шаблону.асд_значення,
        пусто
      );
    } інакше {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Обʼєкт не є шаблоном");
      вернути Результат { помилка = помилка_компіляції };
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не втілено");
    вернути Результат { помилка = помилка_компіляції };
  }
}