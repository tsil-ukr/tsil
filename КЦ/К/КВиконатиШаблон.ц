взяти визначення К;

секція ц {
  місцева дія скомпілювати_виконати_шаблон(К: комірка<Компілятор>, середовище: комірка<Середовище>, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніВиконатиШаблон>): РезультатКомпіляціїВиконатиШаблон {
    ціль результат_компіляції_обʼєкта_як_типу = скомпілювати_асд_значення_як_тип(К, середовище, дані.обʼєкт, пусто);
    якщо результат_компіляції_обʼєкта_як_типу.помилка != пусто {
      вернути РезультатКомпіляціїВиконатиШаблон { Тип {}, результат_компіляції_обʼєкта_як_типу.помилка };
    }
    ціль тип = результат_компіляції_обʼєкта_як_типу.тип;

    якщо перевірити_тип(К, тип, К.тип_комірка) == так {
      якщо дані.аргументи.довжина != 1 {
        ціль помилка_компіляції = створити_помилку_компіляції(пусто, ю8"Очікується один аргумент");
        вернути РезультатКомпіляціїВиконатиШаблон { Тип {}, помилка_компіляції };
      }
      ціль результат_компіляції_аргумента_як_типу = скомпілювати_асд_значення_як_тип(К, середовище, дані.аргументи.елементи[0], пусто);
      якщо результат_компіляції_аргумента_як_типу.помилка != пусто {
        вернути РезультатКомпіляціїВиконатиШаблон { Тип {}, результат_компіляції_аргумента_як_типу.помилка };
      }
      ціль тип_аргумента = результат_компіляції_аргумента_як_типу.тип;
      ціль обʼєкт_типу_комірка = тип.дані як комірка<ОбʼєктТипуКомірка>;
      обʼєкт_типу_комірка.тип_елемента = тип_аргумента;
      обʼєкт_типу_комірка.л_тип = LLVM::pointer(К.Л);
      вернути РезультатКомпіляціїВиконатиШаблон { Тип { ВидТипуКомірка, обʼєкт_типу_комірка }, пусто };
    }

    якщо тип.вид == ВидТипуШаблон {
      ціль обʼєкт_шаблону = тип.дані як комірка<ОбʼєктШаблону>;
      якщо дані.аргументи.довжина != обʼєкт_шаблону.параметри.довжина {
        ціль помилка_компіляції = створити_помилку_компіляції(пусто, ю8"Невірна кількість аргументів шаблону");
        вернути РезультатКомпіляціїВиконатиШаблон { Тип {}, помилка_компіляції };
      }
      ціль середовище_шаблону = створити_середовище(обʼєкт_шаблону.зовнішнє_середовище);
      змінна пх: позитивне = 0;
      поки пх < обʼєкт_шаблону.параметри.довжина {
        ціль назва_параметра = обʼєкт_шаблону.параметри.дані[пх];
        ціль результат_компіляції_аргумента_як_типу = скомпілювати_асд_значення_як_тип(К, середовище, дані.аргументи.елементи[пх], пусто);
        якщо результат_компіляції_аргумента_як_типу.помилка != пусто {
          вернути РезультатКомпіляціїВиконатиШаблон { Тип {}, результат_компіляції_аргумента_як_типу.помилка };
        }
        змінити_в_середовищі(середовище_шаблону, назва_параметра, тип_в_субʼєкт(К, результат_компіляції_аргумента_як_типу.тип));
        пх = пх + 1;
      }
      ціль результат_компіляції_значення_як_типу = скомпілювати_асд_значення_як_тип(К, середовище_шаблону, обʼєкт_шаблону.асд_значення, обʼєкт_шаблону);
      якщо результат_компіляції_значення_як_типу.помилка != пусто {
        вернути РезультатКомпіляціїВиконатиШаблон { Тип {}, результат_компіляції_значення_як_типу.помилка };
      }
      вернути РезультатКомпіляціїВиконатиШаблон { результат_компіляції_значення_як_типу.тип, пусто };
    }

    ціль помилка_компіляції = створити_помилку_компіляції(пусто, ю8"Тип не є коміркою");
    вернути РезультатКомпіляціїВиконатиШаблон { Тип {}, помилка_компіляції };
  }
}