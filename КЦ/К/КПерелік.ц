взяти визначення К;

секція ц {
  місцева дія заповнити_перелік(К: адреса<Компілятор>, обʼєкт_типу: адреса<ОбʼєктТипу>, інформація_середовища: ІнформаціяСередовища, дані: адреса<АСДДаніПерелік>): адреса<ПомилкаКомпіляції> {
    ціль llvm_param_types = виділити<адреса<LLVM::Type>>(2);
    llvm_param_types[0] = LLVM::i64(К.L); // потім: обраховувати відносно кількості елементів переліку
    змінна ціль розмір_найбільшого_елемента: позитивне = 0;
    змінна ціль найбільший_елемент: адреса<ОбʼєктТипу> = пусто;
    змінна ціль пе: позитивне = 0;
    поки пе < дані.кількість_елементів {
      ціль елемент = дані.елементи[пе];
      ціль назва_елементу = елемент.ідентифікатор.значення;
      якщо елемент.структура_ == пусто {
        ціль обʼєкт_типу_елемента_переліку = виділити_обʼєкт_типу(ВидТипуЕлементПереліку);
        обʼєкт_типу_елемента_переліку.назва = назва_елементу;
        обʼєкт_типу_елемента_переліку.обʼєкт_типу_переліку_елемента_переліку = обʼєкт_типу;
        обʼєкт_типу_елемента_переліку.позиція_елемента_переліку = пе;
        обʼєкт_типу_елемента_переліку.обʼєкт_типу_структури_елемента_переліку = пусто;
        обʼєкт_типу_елемента_переліку.llvm_type = обʼєкт_типу.llvm_type;
        покласти_в_накопичувач<адреса<ОбʼєктТипу>>(обʼєкт_типу.елементи_переліку::адреса, обʼєкт_типу_елемента_переліку);
      } інакше {
        ціль обʼєкт_типу_структури = виділити_обʼєкт_типу(ВидТипуСтруктура);
        обʼєкт_типу_структури.назва = назва_елементу;
        обʼєкт_типу_структури.властивості_структури = зробити_накопичувач<ВластивістьСтруктури>();
        обʼєкт_типу_структури.llvm_type = LLVM::struct(К.L, обʼєкт_типу_структури.назва);
        ціль помилка_заповнення_структури = заповнити_структуру(К, обʼєкт_типу_структури, інформація_середовища, елемент.структура_);
        якщо помилка_заповнення_структури != пусто {
          вернути помилка_заповнення_структури;
        }
        ціль обʼєкт_типу_елемента_переліку = виділити_обʼєкт_типу(ВидТипуЕлементПереліку);
        обʼєкт_типу_елемента_переліку.назва = назва_елементу;
        обʼєкт_типу_елемента_переліку.обʼєкт_типу_переліку_елемента_переліку = обʼєкт_типу;
        обʼєкт_типу_елемента_переліку.позиція_елемента_переліку = пе;
        обʼєкт_типу_елемента_переліку.обʼєкт_типу_структури_елемента_переліку = обʼєкт_типу_структури;
        обʼєкт_типу_елемента_переліку.llvm_type = обʼєкт_типу.llvm_type;
        покласти_в_накопичувач<адреса<ОбʼєктТипу>>(обʼєкт_типу.елементи_переліку::адреса, обʼєкт_типу_елемента_переліку);
        ціль розмір_структури = дізнатись_розмір_типу(К, обʼєкт_типу_структури);
        якщо розмір_структури > розмір_найбільшого_елемента {
          розмір_найбільшого_елемента = розмір_структури;
          найбільший_елемент = обʼєкт_типу_елемента_переліку;
        }
      }
      пе += 1;
    }
    якщо найбільший_елемент != пусто {
      llvm_param_types[1] = найбільший_елемент.обʼєкт_типу_структури_елемента_переліку.llvm_type;
      обʼєкт_типу.найбільший_тип_переліку = найбільший_елемент;
    } інакше {
      llvm_param_types[1] = LLVM::i64(К.L);
      обʼєкт_типу.найбільший_тип_переліку = пусто;
    }
    LLVM::struct_set_fields(К.L, обʼєкт_типу.llvm_type, 2, llvm_param_types);
    звільнити(llvm_param_types як адреса);
    вернути пусто;
  }

  місцева дія скомпілювати_перелік(К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніПерелік>): Результат {
    ціль назва = дані.ідентифікатор.значення;
    ціль середовище_компіляції_переліку = створити_середовище(інформація_середовища.середовище);
    змінна ціль обʼєкт_типу: адреса<ОбʼєктТипу>;
    обʼєкт_типу = виділити_обʼєкт_типу(ВидТипуПерелік);
    обʼєкт_типу.назва = назва;
    обʼєкт_типу.елементи_переліку = зробити_накопичувач<адреса<ОбʼєктТипу>>();
    ціль повна_назва = отримати_повну_назву(інформація_середовища.середовище, назва);
    обʼєкт_типу.llvm_type = LLVM::struct(К.L, повна_назва);
    якщо інформація_середовища.інформація_виконання_шаблону == пусто {
      змінити_в_середовищі(середовище_компіляції_переліку, назва_з_ю8сі(К, назва), Обʼєкт { ВидОбʼєктаТип, дані = обʼєкт_типу });
    } інакше {
//      ціль обʼєкт_шаблону = інформація_середовища.інформація_виконання_шаблону.шаблон;
//      ціль аргументи = інформація_середовища.інформація_виконання_шаблону.аргументи;
//      якщо обʼєкт_шаблону.вид == ВидШаблонуЗвичайний {
//        змінити_в_реєстрі<Накопичувач<адреса<ОбʼєктТипу>>, Обʼєкт>(
//          обʼєкт_шаблону.реєстр_готових_значень_звичайного_шаблону,
//          аргументи,
//          Обʼєкт { ВидОбʼєктаТип, дані = обʼєкт_типу }
//        );
//      } інакше якщо обʼєкт_шаблону.вид == ВидШаблонуПереліку {
//        змінити_в_реєстрі<Накопичувач<адреса<ОбʼєктТипу>>, адреса<ОбʼєктТипу>>(
//          обʼєкт_шаблону.реєстр_готових_значень_шаблону_переліку,
//          аргументи,
//          обʼєкт_типу
//        );
//      } інакше {
//        ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8сі"Щось пішло не так");
//        вернути результат_помилка(помилка_компіляції);
//      }
    }
    ціль помилка_заповнення = заповнити_перелік(К, обʼєкт_типу, інформація_середовища, дані);
    якщо помилка_заповнення != пусто {
      вернути результат_помилка(помилка_заповнення);
    }
    ціль обʼєкт = Обʼєкт { ВидОбʼєктаТип, дані = обʼєкт_типу };
    вернути Результат { обʼєкт, пусто };
  }

  місцева дія скомпілювати_визначити_перелік(К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніПерелік>): адреса<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    змінна ціль обʼєкт_з_середовища: Обʼєкт;
    ціль успіх_отримання_з_середовища = отримати_з_локального_середовища(інформація_середовища.середовище, назва_з_ю8сі(К, назва), обʼєкт_з_середовища::адреса);
    якщо успіх_отримання_з_середовища == так {
      якщо обʼєкт_з_середовища.вид == ВидОбʼєктаТип {
        ціль обʼєкт_типу = обʼєкт_з_середовища.дані як адреса<ОбʼєктТипу>;
        якщо обʼєкт_типу.вид == ВидТипуПерелік {
          якщо обʼєкт_типу.елементи_переліку.розмір == 0 {
            ціль помилка_заповнення = заповнити_перелік(К, обʼєкт_типу, інформація_середовища, дані);
            якщо помилка_заповнення != пусто {
              вернути помилка_заповнення;
            }
            вернути пусто;
          }
        }
      }
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    } інакше {
      ціль результат_компіляції_переліку = скомпілювати_перелік(К, інформація_середовища, місцезнаходження, дані);
      якщо результат_компіляції_переліку.помилка != пусто {
        вернути результат_компіляції_переліку.помилка;
      }
      змінити_в_середовищі(інформація_середовища.середовище, назва_з_ю8сі(К, назва), результат_компіляції_переліку.обʼєкт);
    }
    вернути пусто;
  }
}