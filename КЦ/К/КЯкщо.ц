взяти визначення К;

секція ц {
  місцева дія скомпілювати_якщо(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніЯкщо>): РезультатКомпіляціїЯкщо {
    ціль результат_компіляції_умови = скомпілювати_значення_як_значення(
      К,
      інформація_середовища,
      дані.умова,
      К.тип_логічне
    );
    якщо результат_компіляції_умови.помилка != пусто {
      вернути РезультатКомпіляціїЯкщо { помилка = результат_компіляції_умови.помилка };
    }
    ціль обʼєкт_значення_умови = результат_компіляції_умови.обʼєкт_значення;
    якщо обʼєкт_значення_умови.тип != К.тип_логічне {
      ціль помилка_компіляції = виділити_помилку_компіляції(дані.умова.місцезнаходження, ю8"Тип умови повинен бути логічним");
      вернути РезультатКомпіляціїЯкщо { помилка = помилка_компіляції };
    }
    ціль if_body_llvm_block = LLVM::block(К.L, інформація_середовища.обʼєкт_дії.llvm_function, ю8"if_body");
    ціль if_body_llvm_else_block = LLVM::block(К.L, інформація_середовища.обʼєкт_дії.llvm_function, ю8"if_body_else");
    ціль if_body_llvm_exit_block = LLVM::block(К.L, інформація_середовища.обʼєкт_дії.llvm_function, ю8"if_body_exit");
    LLVM::brif(К.L, інформація_середовища.llvm_block, обʼєкт_значення_умови.llvm_value, if_body_llvm_block, if_body_llvm_else_block);
    ціль середовище_якщо = створити_середовище(інформація_середовища.середовище);
    ціль результат_компіляції_тіла = скомпілювати_блок(
      К,
      ІнформаціяСередовища {
        середовище = середовище_якщо,
        обʼєкт_дії = інформація_середовища.обʼєкт_дії,
        llvm_block = if_body_llvm_block,
        інформація_виконання_шаблону = інформація_середовища.інформація_виконання_шаблону
      },
      if_body_llvm_exit_block,
      дані.тіло
    );
    якщо результат_компіляції_тіла.помилка != пусто {
      вернути РезультатКомпіляціїЯкщо { помилка = результат_компіляції_тіла.помилка };
    }
    якщо дані.тіло_інакше != пусто {
      ціль середовище_якщо_інакше = створити_середовище(інформація_середовища.середовище);
      ціль результат_компіляції_тіла = скомпілювати_блок(
        К,
        ІнформаціяСередовища {
          середовище = середовище_якщо,
          обʼєкт_дії = інформація_середовища.обʼєкт_дії,
          llvm_block = if_body_llvm_else_block,
          інформація_виконання_шаблону = інформація_середовища.інформація_виконання_шаблону
        },
        if_body_llvm_exit_block,
        дані.тіло_інакше
      );
      якщо результат_компіляції_тіла.помилка != пусто {
        вернути РезультатКомпіляціїЯкщо { помилка = результат_компіляції_тіла.помилка };
      }
    } інакше {
      LLVM::br(К.L, if_body_llvm_else_block, if_body_llvm_exit_block);
    }
    вернути РезультатКомпіляціїЯкщо { if_body_llvm_exit_block, помилка = пусто };
  }
}