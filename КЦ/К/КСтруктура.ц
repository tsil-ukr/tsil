взяти визначення К;

секція ц {
  місцева дія заповнити_структуру(К: комірка<Компілятор>, середовище: комірка<Середовище>, обʼєкт_типу: комірка<ОбʼєктТипу>, дані: комірка<АСДДаніСтруктура>): комірка<ПомилкаКомпіляції> {
    ціль llvm_param_types = виділити<комірка<LLVM::Type>>(дані.кількість_параметрів);
    змінна пх: позитивне = 0;
    поки пх < дані.кількість_параметрів {
      ціль параметр = дані.параметри[пх];
      ціль назва_параметра = параметр.ідентифікатор.значення;
      ціль результат_компіляції_значення_типу_параметра = скомпілювати_значення_як_тип(К, пусто, пусто, середовище, параметр.тип);
      якщо результат_компіляції_значення_типу_параметра.помилка != пусто {
        вернути результат_компіляції_значення_типу_параметра.помилка;
      }
      ціль обʼєкт_типу_параметра = результат_компіляції_значення_типу_параметра.обʼєкт_типу;
      ціль властивість_структури = ВластивістьСтруктури { назва = назва_параметра, тип = обʼєкт_типу_параметра };
      додати_до_списку<ВластивістьСтруктури>(обʼєкт_типу.властивості_структури, властивість_структури);
      llvm_param_types[пх] = обʼєкт_типу_параметра.llvm_type;
      пх = пх + 1;
    }
    LLVM::struct_set_fields(К.L, обʼєкт_типу.llvm_type, дані.кількість_параметрів, llvm_param_types);
    звільнити(llvm_param_types);
    вернути пусто;
  }

  місцева дія скомпілювати_структуру(К: комірка<Компілятор>, блок: комірка<Блок>, інформація_виконання_шаблону: комірка<ІнформаціяВиконанняШаблону>, середовище: комірка<Середовище>, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніСтруктура>): Результат {
    ціль назва = дані.ідентифікатор.значення;
    ціль середовище_компіляції_структури = створити_середовище(середовище);
    змінна обʼєкт_типу: комірка<ОбʼєктТипу>;
    обʼєкт_типу = виділити<ОбʼєктТипу>();
    обʼєкт_типу.вид = ВидТипуСтруктура;
    обʼєкт_типу.назва = назва;
    обʼєкт_типу.властивості_структури = виділити_список<ВластивістьСтруктури>();
    обʼєкт_типу.параметри_дії = пусто;
    обʼєкт_типу.тип_результату_дії = пусто;
    обʼєкт_типу.llvm_type = LLVM::struct(К.L, назва);
    якщо інформація_виконання_шаблону == пусто {
      змінити_в_середовищі(середовище_компіляції_структури, назва, Обʼєкт { ВидОбʼєктаТипу, дані = обʼєкт_типу });
    } інакше {
      // ...
    }
    ціль помилка_заповнення = заповнити_структуру(К, середовище_компіляції_структури, обʼєкт_типу, дані);
    якщо помилка_заповнення != пусто {
      вернути Результат { помилка = помилка_заповнення };
    }
    ціль обʼєкт = Обʼєкт { ВидОбʼєктаТипу, дані = обʼєкт_типу };
    вернути Результат { обʼєкт, пусто };
  }

  місцева дія скомпілювати_визначити_структуру(К: комірка<Компілятор>, блок: комірка<Блок>, інформація_виконання_шаблону: комірка<ІнформаціяВиконанняШаблону>, середовище: комірка<Середовище>, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніСтруктура>): комірка<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    змінна обʼєкт_з_середовища: Обʼєкт;
    ціль успіх_отримання_з_середовища = отримати_з_локального_середовища(середовище, назва, комірка(обʼєкт_з_середовища));
    якщо успіх_отримання_з_середовища == так {
      якщо обʼєкт_з_середовища.вид == ВидОбʼєктаТипу {
        ціль обʼєкт_типу = обʼєкт_з_середовища.дані як комірка<ОбʼєктТипу>;
        якщо обʼєкт_типу.вид == ВидТипуСтруктура {
          якщо обʼєкт_типу.властивості_структури.довжина == 0 {
            ціль помилка_заповнення = заповнити_структуру(К, середовище, обʼєкт_типу, дані);
            якщо помилка_заповнення != пусто {
              вернути помилка_заповнення;
            }
            вернути пусто;
          }
        }
      }
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Субʼєкт вже визначено");
      вернути помилка_компіляції;
    } інакше {
      ціль результат_компіляції_структури = скомпілювати_структуру(К, пусто, пусто, середовище, місцезнаходження, дані);
      якщо результат_компіляції_структури.помилка != пусто {
        вернути результат_компіляції_структури.помилка;
      }
      змінити_в_середовищі(середовище, назва, результат_компіляції_структури.обʼєкт);
    }
    вернути пусто;
  }
}