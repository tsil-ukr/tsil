взяти визначення К;

секція ц {
  дія порівняти_списки_обʼєктів_типів(с1: комірка<список<комірка<ОбʼєктТипу>>>, с2: комірка<список<комірка<ОбʼєктТипу>>>): логічне {
    якщо с1.довжина != с2.довжина {
      вернути ні;
    }
    змінна х: позитивне = 0;
    поки х < с1.довжина {
      якщо перевірити_тип(с1.дані[х], с2.дані[х]) == ні {
        вернути ні;
      }
      х = х + 1;
    }
    вернути так;
  }

  місцева дія скомпілювати_шаблон(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніШаблон>): Результат {
    якщо дані.значення.вид == АСДВидШаблон {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Неможливо створити шаблон для шаблону");
      вернути Результат { помилка = помилка_компіляції };
    }
    якщо дані.значення.вид == АСДВидДія {
      ціль дані_значення = дані.значення.дані як комірка<АСДДаніДія>;
      якщо дані_значення.видимість != АСДВидимістьВнутрішня {
        ціль помилка_компіляції = виділити_помилку_компіляції_шаблон_дії_може_мати_лише_внутрішню_видимість(місцезнаходження);
        вернути Результат { помилка = помилка_компіляції };
      }
    }
    ціль назва = дані.ідентифікатор.значення;
    ціль обʼєкт_шаблону = виділити<ОбʼєктШаблону>();
    якщо дані.значення.вид == АСДВидСтруктура {
      обʼєкт_шаблону.вид = ВидШаблонуСтруктури;
    } інакше якщо дані.значення.вид == АСДВидДія {
      обʼєкт_шаблону.вид = ВидШаблонуДії;
    } інакше {
      обʼєкт_шаблону.вид = ВидШаблонуЗвичайний;
    }
    обʼєкт_шаблону.назва = назва;
    обʼєкт_шаблону.інформація_середовища_компіляції = інформація_середовища;
    обʼєкт_шаблону.параметри = виділити_список<памʼять<п8>>();
    змінна пх: позитивне = 0;
    поки пх < дані.кількість_параметрів {
      ціль асд_ідентифікатор = дані.параметри[пх];
      додати_до_списку<памʼять<п8>>(обʼєкт_шаблону.параметри, асд_ідентифікатор.значення);
      пх = пх + 1;
    }
    якщо дані.значення.вид == АСДВидСтруктура {
      обʼєкт_шаблону.місцезнаходження_асд_даних_шаблону_структури = дані.значення.місцезнаходження;
      обʼєкт_шаблону.асд_дані_шаблону_структури = дані.значення.дані як комірка<АСДДаніСтруктура>;
      обʼєкт_шаблону.карта_готових_значень_шаблону_структури = виділити_карту<комірка<список<комірка<ОбʼєктТипу>>>, комірка<ОбʼєктТипу>>(порівняти_списки_обʼєктів_типів);
    } інакше якщо дані.значення.вид == АСДВидДія {
      обʼєкт_шаблону.місцезнаходження_асд_даних_шаблону_дії = дані.значення.місцезнаходження;
      обʼєкт_шаблону.асд_дані_шаблону_дії = дані.значення.дані як комірка<АСДДаніДія>;
      обʼєкт_шаблону.карта_готових_значень_шаблону_дії = виділити_карту<комірка<список<комірка<ОбʼєктТипу>>>, комірка<ОбʼєктДії>>(порівняти_списки_обʼєктів_типів);
    } інакше {
      обʼєкт_шаблону.асд_значення_звичайного_шаблону = дані.значення;
      обʼєкт_шаблону.карта_готових_значень_звичайного_шаблону = виділити_карту<комірка<список<комірка<ОбʼєктТипу>>>, Обʼєкт>(порівняти_списки_обʼєктів_типів);
    }
    змінити_в_середовищі(інформація_середовища.середовище, назва, Обʼєкт { ВидОбʼєктаШаблону, дані = обʼєкт_шаблону });
    вернути Результат { Обʼєкт { ВидОбʼєктаШаблону, дані = обʼєкт_шаблону }, помилка = пусто };
  }

  дія дозаповнити_шаблон_структури(обʼєкт_шаблону: комірка<ОбʼєктШаблону>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніСтруктура>): комірка<ПомилкаКомпіляції> {
    якщо обʼєкт_шаблону.асд_дані_шаблону_структури.кількість_параметрів != 0 {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, обʼєкт_шаблону.назва);
      вернути помилка_компіляції;
    }
    обʼєкт_шаблону.асд_дані_шаблону_структури = дані;
    обʼєкт_шаблону.інформація_середовища_компіляції = інформація_середовища;
    змінна пх: позитивне = 0;
    поки пх < обʼєкт_шаблону.карта_готових_значень_шаблону_структури.елементи.довжина {
      ціль ек = обʼєкт_шаблону.карта_готових_значень_шаблону_структури.елементи.дані[пх];
      ціль обʼєкт_типу = ек.значення;
      ціль помилка_заповнення = заповнити_структуру(
        К,
        обʼєкт_типу,
        інформація_середовища, // потім: здається це неправильно
        дані
      );
      якщо помилка_заповнення != пусто {
        вернути помилка_заповнення;
      }
      пх = пх + 1;
    }
    вернути пусто;
  }

  структура РезультатПеревіркиРівностіТипівПараметрів {
    успіх: логічне;
    помилка: комірка<ПомилкаКомпіляції>;
  }

  дія перевірити_чи_асд_параметри_мають_рівні_типи(К: комірка<Компілятор>, параметри_шаблону: комірка<список<памʼять<п8>>>, кількість_старих_параметрів: позитивне, старі_параметри: памʼять<комірка<АСДПараметр>>, кількість_нових_параметрів: позитивне, нові_параметри: памʼять<комірка<АСДПараметр>>): РезультатПеревіркиРівностіТипівПараметрів {
    // потім: перевірити кількість і типи
    вернути РезультатПеревіркиРівностіТипівПараметрів { так, помилка = пусто };
  }

  дія дозаповнити_шаблон_дії(обʼєкт_шаблону: комірка<ОбʼєктШаблону>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніДія>): комірка<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    якщо дані.видимість != АСДВидимістьВнутрішня {
      ціль помилка_компіляції = виділити_помилку_компіляції_шаблон_дії_може_мати_лише_внутрішню_видимість(місцезнаходження);
      вернути помилка_компіляції;
    }
    якщо обʼєкт_шаблону.асд_дані_шаблону_дії.тіло != пусто {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    }
    якщо обʼєкт_шаблону.асд_дані_шаблону_дії.кількість_параметрів != дані.кількість_параметрів {
      якщо дані.видимість == АСДВидимістьЗовнішня {
        ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
        вернути помилка_компіляції;
      }
      ціль обʼєкт_шаблону_групи_дій = обʼєкт_шаблону;
      обʼєкт_шаблону_групи_дій.вид = ВидШаблонуГрупиДій;
      обʼєкт_шаблону_групи_дій.назва = назва;
      обʼєкт_шаблону_групи_дій.інформація_середовища_компіляції = інформація_середовища;
      обʼєкт_шаблону_групи_дій.параметри = обʼєкт_шаблону.параметри;
      обʼєкт_шаблону_групи_дій.список_асд_значень_шаблону_групи_дій = виділити_список<комірка<АСДЗначенняДії>>();
      обʼєкт_шаблону_групи_дій.карта_готових_значень_шаблону_групи_дії = виділити_карту<комірка<список<комірка<ОбʼєктТипу>>>, комірка<ОбʼєктГрупиДій>>(порівняти_списки_обʼєктів_типів);
      ціль асд_значення_дії = виділити<АСДЗначенняДії>();
      асд_значення_дії.місцезнаходження = місцезнаходження;
      асд_значення_дії.дані = дані;
      додати_до_списку<комірка<АСДЗначенняДії>>(обʼєкт_шаблону_групи_дій.список_асд_значень_шаблону_групи_дій, асд_значення_дії);
      змінна пх: позитивне = 0;
      поки пх < обʼєкт_шаблону.карта_готових_значень_шаблону_дії.елементи.довжина {
        ціль ключ = обʼєкт_шаблону.карта_готових_значень_шаблону_дії.елементи.дані[пх].ключ;
        ціль обʼєкт_дії = обʼєкт_шаблону.карта_готових_значень_шаблону_дії.елементи.дані[пх].значення;
        ціль обʼєкт_групи_дій = виділити<ОбʼєктГрупиДій>();
        обʼєкт_групи_дій.обʼєкти_дій = виділити_список<комірка<ОбʼєктДії>>();
        додати_до_списку<комірка<ОбʼєктДії>>(обʼєкт_групи_дій.обʼєкти_дій, обʼєкт_дії);
        змінити_значення_карти<комірка<список<комірка<ОбʼєктТипу>>>, комірка<ОбʼєктГрупиДій>>(обʼєкт_шаблону_групи_дій.карта_готових_значень_шаблону_групи_дії, ключ, обʼєкт_групи_дій);
        пх = пх + 1;
      }
      вернути пусто;
    }
    ціль результат_перевірки_рівності_типів_параметрів = перевірити_чи_асд_параметри_мають_рівні_типи(К, обʼєкт_шаблону.параметри, обʼєкт_шаблону.асд_дані_шаблону_дії.кількість_параметрів, обʼєкт_шаблону.асд_дані_шаблону_дії.параметри, дані.кількість_параметрів, дані.параметри);
    якщо результат_перевірки_рівності_типів_параметрів.помилка != пусто {
      вернути результат_перевірки_рівності_типів_параметрів.помилка;
    }
    якщо результат_перевірки_рівності_типів_параметрів.успіх == ні {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    }
    обʼєкт_шаблону.асд_дані_шаблону_дії = дані;
    обʼєкт_шаблону.інформація_середовища_компіляції = інформація_середовища;
    змінна пх: позитивне = 0;
    поки пх < обʼєкт_шаблону.карта_готових_значень_шаблону_дії.елементи.довжина {
      ціль обʼєкт_дії = обʼєкт_шаблону.карта_готових_значень_шаблону_дії.елементи.дані[пх].значення;
      ціль результат_перевірки_підпису_асд_параметрів = перевірити_підпис_дії_асд_параметрів(К, інформація_середовища, обʼєкт_дії, дані.кількість_параметрів, дані.параметри, ні);
      якщо результат_перевірки_підпису_асд_параметрів.помилка != пусто {
        вернути результат_перевірки_підпису_асд_параметрів.помилка;
      }
      якщо результат_перевірки_підпису_асд_параметрів.успіх == так {
        вернути дозаповнити_дію_без_перевірки_підпису_параметрів(обʼєкт_дії, К, інформація_середовища, місцезнаходження, дані);
      } інакше {
        ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
        вернути помилка_компіляції;
      }
      пх = пх + 1;
    }
    вернути пусто;
  }

  дія дозаповнити_шаблон(обʼєкт_шаблону: комірка<ОбʼєктШаблону>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніШаблон>): комірка<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    якщо обʼєкт_шаблону.параметри.довжина != дані.кількість_параметрів {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Кількість параметрів не співпадає");
      вернути помилка_компіляції;
    }
    змінна пх: позитивне = 0;
    поки пх < обʼєкт_шаблону.параметри.довжина {
      ціль параметр = обʼєкт_шаблону.параметри.дані[пх];
      ціль асд_параметр = дані.параметри[пх].значення;
      якщо strcmp(параметр, асд_параметр) != 0 {
        ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Назви параметрів шаблону не співпадають");
        вернути помилка_компіляції;
      }
      пх = пх + 1;
    }
    якщо обʼєкт_шаблону.вид == ВидШаблонуЗвичайний {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    } інакше якщо обʼєкт_шаблону.вид == ВидШаблонуСтруктури {
      якщо дані.значення.вид == АСДВидСтруктура {
        вернути дозаповнити_шаблон_структури(обʼєкт_шаблону, К, інформація_середовища, дані.значення.місцезнаходження, дані.значення.дані як комірка<АСДДаніСтруктура>);
      }
    } інакше якщо обʼєкт_шаблону.вид == ВидШаблонуДії {
      якщо дані.значення.вид == АСДВидДія {
        вернути дозаповнити_шаблон_дії(обʼєкт_шаблону, К, інформація_середовища, дані.значення.місцезнаходження, дані.значення.дані як комірка<АСДДаніДія>);
      }
    }
    ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
    вернути помилка_компіляції;
  }

  місцева дія скомпілювати_визначити_шаблон(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніШаблон>): комірка<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    змінна обʼєкт_з_середовища: Обʼєкт;
    ціль успіх_отримання_з_середовища = отримати_з_локального_середовища(інформація_середовища.середовище, назва, комірка(обʼєкт_з_середовища));
    якщо успіх_отримання_з_середовища == так {
      якщо обʼєкт_з_середовища.вид == ВидОбʼєктаШаблону {
        ціль обʼєкт_шаблону = обʼєкт_з_середовища.дані як комірка<ОбʼєктШаблону>;
        вернути дозаповнити_шаблон(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, дані);
      }
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    } інакше {
      ціль результат_компіляції_шаблону = скомпілювати_шаблон(К, інформація_середовища, місцезнаходження, дані);
      якщо результат_компіляції_шаблону.помилка != пусто {
        вернути результат_компіляції_шаблону.помилка;
      }
      змінити_в_середовищі(інформація_середовища.середовище, назва, результат_компіляції_шаблону.обʼєкт);
    }
    вернути пусто;
  }
}