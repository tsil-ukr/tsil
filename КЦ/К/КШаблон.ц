взяти визначення К;

секція ц {
  дія порівняти_списки_обʼєктів_типів(с1: Накопичувач<адреса<ОбʼєктТипу>>, с2: Накопичувач<адреса<ОбʼєктТипу>>): логічне {
    якщо с1.розмір != с2.розмір {
      вернути ні;
    }
    змінна ціль х: позитивне = 0;
    поки х < с1.розмір {
      якщо перевірити_тип(с1.дані[х], с2.дані[х]) == ні {
        вернути ні;
      }
      х = х + 1;
    }
    вернути так;
  }

  місцева дія скомпілювати_шаблон(К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніШаблон>): Результат {
    якщо дані.значення.вид == АСДВидШаблон {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Неможливо створити шаблон для шаблону");
      вернути результат_помилка(помилка_компіляції);
    }
    якщо дані.значення.вид == АСДВидДія {
      ціль дані_значення = дані.значення.дані як адреса<АСДДаніДія>;
      якщо дані_значення.видимість != АСДВидимістьВнутрішня {
        ціль помилка_компіляції = виділити_помилку_компіляції_шаблон_дії_може_мати_лише_внутрішню_видимість(місцезнаходження);
        вернути результат_помилка(помилка_компіляції);
      }
    }
    ціль назва = дані.ідентифікатор.значення;
    ціль обʼєкт_шаблону = виділити<ОбʼєктШаблону>();
    якщо дані.значення.вид == АСДВидСтруктура {
      обʼєкт_шаблону.вид = ВидШаблонуСтруктури;
    } інакше якщо дані.значення.вид == АСДВидДія {
      обʼєкт_шаблону.вид = ВидШаблонуДії;
    } інакше {
      обʼєкт_шаблону.вид = ВидШаблонуЗвичайний;
    }
    обʼєкт_шаблону.назва = назва;
    обʼєкт_шаблону.інформація_середовища_компіляції = інформація_середовища;
    обʼєкт_шаблону.параметри = зробити_накопичувач<памʼять<п8>>();
    змінна ціль пх: позитивне = 0;
    поки пх < дані.кількість_параметрів {
      ціль асд_ідентифікатор = дані.параметри[пх];
      покласти_в_накопичувач<памʼять<п8>>(обʼєкт_шаблону.параметри::адреса, асд_ідентифікатор.значення);
      пх = пх + 1;
    }
    якщо дані.значення.вид == АСДВидСтруктура {
      обʼєкт_шаблону.місцезнаходження_асд_даних_шаблону_структури = дані.значення.місцезнаходження;
      обʼєкт_шаблону.асд_дані_шаблону_структури = дані.значення.дані як адреса<АСДДаніСтруктура>;
      обʼєкт_шаблону.реєстр_готових_значень_шаблону_структури = виділити_реєстр<Накопичувач<адреса<ОбʼєктТипу>>, адреса<ОбʼєктТипу>>(порівняти_списки_обʼєктів_типів);
    } інакше якщо дані.значення.вид == АСДВидДія {
      обʼєкт_шаблону.місцезнаходження_асд_даних_шаблону_дії = дані.значення.місцезнаходження;
      обʼєкт_шаблону.асд_дані_шаблону_дії = дані.значення.дані як адреса<АСДДаніДія>;
      обʼєкт_шаблону.реєстр_готових_значень_шаблону_дії = виділити_реєстр<Накопичувач<адреса<ОбʼєктТипу>>, адреса<ОбʼєктДії>>(порівняти_списки_обʼєктів_типів);
    } інакше {
      обʼєкт_шаблону.асд_значення_звичайного_шаблону = дані.значення;
      обʼєкт_шаблону.реєстр_готових_значень_звичайного_шаблону = виділити_реєстр<Накопичувач<адреса<ОбʼєктТипу>>, Обʼєкт>(порівняти_списки_обʼєктів_типів);
    }
    змінити_в_середовищі(інформація_середовища.середовище, назва, Обʼєкт { ВидОбʼєктаШаблону, дані = обʼєкт_шаблону });
    вернути Результат { Обʼєкт { ВидОбʼєктаШаблону, дані = обʼєкт_шаблону }, помилка = пусто };
  }

  дія дозаповнити_шаблон_структури(обʼєкт_шаблону: адреса<ОбʼєктШаблону>, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніСтруктура>): адреса<ПомилкаКомпіляції> {
    якщо обʼєкт_шаблону.асд_дані_шаблону_структури.кількість_параметрів != 0 {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, обʼєкт_шаблону.назва);
      вернути помилка_компіляції;
    }
    обʼєкт_шаблону.асд_дані_шаблону_структури = дані;
    обʼєкт_шаблону.інформація_середовища_компіляції = інформація_середовища;
    змінна ціль пх: позитивне = 0;
    поки пх < обʼєкт_шаблону.реєстр_готових_значень_шаблону_структури.розмір {
      ціль ек = обʼєкт_шаблону.реєстр_готових_значень_шаблону_структури.елементи[пх];
      ціль обʼєкт_типу = ек.значення;
      ціль помилка_заповнення = заповнити_структуру(
        К,
        обʼєкт_типу,
        інформація_середовища, // потім: здається це неправильно
        дані
      );
      якщо помилка_заповнення != пусто {
        вернути помилка_заповнення;
      }
      пх = пх + 1;
    }
    вернути пусто;
  }

  структура РезультатПеревіркиРівностіТипівПараметрів {
    успіх: логічне;
    помилка: адреса<ПомилкаКомпіляції>;
  }

  дія перевірити_чи_асд_параметри_мають_рівні_типи(К: адреса<Компілятор>, параметри_шаблону: Накопичувач<памʼять<п8>>, кількість_старих_параметрів: позитивне, старі_параметри: памʼять<адреса<АСДПараметр>>, кількість_нових_параметрів: позитивне, нові_параметри: памʼять<адреса<АСДПараметр>>): РезультатПеревіркиРівностіТипівПараметрів {
    // потім: перевірити кількість і типи
    вернути РезультатПеревіркиРівностіТипівПараметрів { так, помилка = пусто };
  }

  дія дозаповнити_шаблон_дії(обʼєкт_шаблону: адреса<ОбʼєктШаблону>, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніДія>): адреса<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    якщо дані.видимість != АСДВидимістьВнутрішня {
      ціль помилка_компіляції = виділити_помилку_компіляції_шаблон_дії_може_мати_лише_внутрішню_видимість(місцезнаходження);
      вернути помилка_компіляції;
    }
    якщо обʼєкт_шаблону.асд_дані_шаблону_дії.тіло != пусто {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    }
    якщо обʼєкт_шаблону.асд_дані_шаблону_дії.кількість_параметрів != дані.кількість_параметрів {
      якщо дані.видимість == АСДВидимістьЗовнішня {
        ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
        вернути помилка_компіляції;
      }
      ціль обʼєкт_шаблону_групи_дій = обʼєкт_шаблону;
      обʼєкт_шаблону_групи_дій.вид = ВидШаблонуГрупиДій;
      обʼєкт_шаблону_групи_дій.назва = назва;
      обʼєкт_шаблону_групи_дій.інформація_середовища_компіляції = інформація_середовища;
      обʼєкт_шаблону_групи_дій.параметри = обʼєкт_шаблону.параметри;
      обʼєкт_шаблону_групи_дій.список_асд_значень_шаблону_групи_дій = зробити_накопичувач<адреса<АСДЗначенняДії>>();
      обʼєкт_шаблону_групи_дій.реєстр_готових_значень_шаблону_групи_дій = виділити_реєстр<Накопичувач<адреса<ОбʼєктТипу>>, адреса<ОбʼєктГрупиДій>>(порівняти_списки_обʼєктів_типів);
      ціль попереднє_асд_значення_дії = виділити<АСДЗначенняДії>();
      попереднє_асд_значення_дії.місцезнаходження = обʼєкт_шаблону.місцезнаходження_асд_даних_шаблону_дії;
      попереднє_асд_значення_дії.дані = обʼєкт_шаблону.асд_дані_шаблону_дії;
      ціль асд_значення_дії = виділити<АСДЗначенняДії>();
      асд_значення_дії.місцезнаходження = місцезнаходження;
      асд_значення_дії.дані = дані;
      покласти_в_накопичувач<адреса<АСДЗначенняДії>>(обʼєкт_шаблону_групи_дій.список_асд_значень_шаблону_групи_дій::адреса, попереднє_асд_значення_дії);
      покласти_в_накопичувач<адреса<АСДЗначенняДії>>(обʼєкт_шаблону_групи_дій.список_асд_значень_шаблону_групи_дій::адреса, асд_значення_дії);
      змінна ціль пх: позитивне = 0;
      поки пх < обʼєкт_шаблону.реєстр_готових_значень_шаблону_дії.розмір {
        ціль ключ = обʼєкт_шаблону.реєстр_готових_значень_шаблону_дії.елементи[пх].ключ;
        ціль обʼєкт_дії = обʼєкт_шаблону.реєстр_готових_значень_шаблону_дії.елементи[пх].значення;
        ціль обʼєкт_групи_дій = виділити<ОбʼєктГрупиДій>();
        обʼєкт_групи_дій.обʼєкти_дій = зробити_накопичувач<адреса<ОбʼєктДії>>();
        покласти_в_накопичувач<адреса<ОбʼєктДії>>(обʼєкт_групи_дій.обʼєкти_дій::адреса, обʼєкт_дії);
        змінити_в_реєстрі<Накопичувач<адреса<ОбʼєктТипу>>, адреса<ОбʼєктГрупиДій>>(обʼєкт_шаблону_групи_дій.реєстр_готових_значень_шаблону_групи_дій, ключ, обʼєкт_групи_дій);
        пх = пх + 1;
      }
      вернути пусто;
    }
    ціль результат_перевірки_рівності_типів_параметрів = перевірити_чи_асд_параметри_мають_рівні_типи(К, обʼєкт_шаблону.параметри, обʼєкт_шаблону.асд_дані_шаблону_дії.кількість_параметрів, обʼєкт_шаблону.асд_дані_шаблону_дії.параметри, дані.кількість_параметрів, дані.параметри);
    якщо результат_перевірки_рівності_типів_параметрів.помилка != пусто {
      вернути результат_перевірки_рівності_типів_параметрів.помилка;
    }
    якщо результат_перевірки_рівності_типів_параметрів.успіх == ні {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    }
    обʼєкт_шаблону.асд_дані_шаблону_дії = дані;
    обʼєкт_шаблону.інформація_середовища_компіляції = інформація_середовища;
    змінна ціль пх: позитивне = 0;
    поки пх < обʼєкт_шаблону.реєстр_готових_значень_шаблону_дії.розмір {
      ціль обʼєкт_дії = обʼєкт_шаблону.реєстр_готових_значень_шаблону_дії.елементи[пх].значення;
      ціль результат_перевірки_підпису_асд_параметрів = перевірити_підпис_дії_асд_параметрів(К, інформація_середовища, обʼєкт_дії, дані.кількість_параметрів, дані.параметри, ні);
      якщо результат_перевірки_підпису_асд_параметрів.помилка != пусто {
        вернути результат_перевірки_підпису_асд_параметрів.помилка;
      }
      якщо результат_перевірки_підпису_асд_параметрів.успіх == так {
        вернути дозаповнити_дію_без_перевірки_підпису_параметрів(обʼєкт_дії, К, інформація_середовища, місцезнаходження, дані);
      } інакше {
        ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
        вернути помилка_компіляції;
      }
      пх = пх + 1;
    }
    вернути пусто;
  }

  дія дозаповнити_шаблон_групи_дій(обʼєкт_шаблону: адреса<ОбʼєктШаблону>, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніДія>): адреса<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    якщо дані.видимість != АСДВидимістьВнутрішня {
      ціль помилка_компіляції = виділити_помилку_компіляції_шаблон_дії_може_мати_лише_внутрішню_видимість(місцезнаходження);
      вернути помилка_компіляції;
    }
    змінна ціль знайдене_асд_значення_дії: адреса<АСДЗначенняДії> = пусто;
    змінна ціль позиція_знайденого_асд_значення_дії: позитивне = 0;
    змінна ціль пх: позитивне = 0;
    поки пх < обʼєкт_шаблону.список_асд_значень_шаблону_групи_дій.розмір {
      якщо дані.кількість_параметрів == обʼєкт_шаблону.список_асд_значень_шаблону_групи_дій.дані[пх].дані.кількість_параметрів {
        знайдене_асд_значення_дії = обʼєкт_шаблону.список_асд_значень_шаблону_групи_дій.дані[пх];
        позиція_знайденого_асд_значення_дії = пх;
      }
      пх = пх + 1;
    }
    якщо знайдене_асд_значення_дії == пусто {
      // потім: доробити
    } інакше {
      якщо знайдене_асд_значення_дії.дані.тіло != пусто {
        ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
        вернути помилка_компіляції;
      }
      ціль результат_перевірки_рівності_типів_параметрів = перевірити_чи_асд_параметри_мають_рівні_типи(К, обʼєкт_шаблону.параметри, знайдене_асд_значення_дії.дані.кількість_параметрів, знайдене_асд_значення_дії.дані.параметри, дані.кількість_параметрів, дані.параметри);
      якщо результат_перевірки_рівності_типів_параметрів.помилка != пусто {
        вернути результат_перевірки_рівності_типів_параметрів.помилка;
      }
      якщо результат_перевірки_рівності_типів_параметрів.успіх == ні {
        ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
        вернути помилка_компіляції;
      }
      обʼєкт_шаблону.список_асд_значень_шаблону_групи_дій.дані[позиція_знайденого_асд_значення_дії].дані = дані;
      обʼєкт_шаблону.інформація_середовища_компіляції = інформація_середовища;  // потім: треба зберігати інформацію середовища для кожного асдзначеннядії
      змінна ціль пх: позитивне = 0;
      поки пх < обʼєкт_шаблону.реєстр_готових_значень_шаблону_групи_дій.розмір {
        ціль обʼєкт_групи_дій = обʼєкт_шаблону.реєстр_готових_значень_шаблону_групи_дій.елементи[пх].значення;
        змінна ціль хх: позитивне = 0;
        поки хх < обʼєкт_групи_дій.обʼєкти_дій.розмір {
          ціль обʼєкт_дії = обʼєкт_групи_дій.обʼєкти_дій.дані[хх];
          якщо обʼєкт_дії.параметри.розмір == дані.кількість_параметрів {
            ціль результат_перевірки_підпису_асд_параметрів = перевірити_підпис_дії_асд_параметрів(К, інформація_середовища, обʼєкт_дії, дані.кількість_параметрів, дані.параметри, ні);
            якщо результат_перевірки_підпису_асд_параметрів.помилка != пусто {
              вернути результат_перевірки_підпису_асд_параметрів.помилка;
            }
            якщо результат_перевірки_підпису_асд_параметрів.успіх == так {
              вернути дозаповнити_дію_без_перевірки_підпису_параметрів(обʼєкт_дії, К, інформація_середовища, місцезнаходження, дані);
            } інакше {
              ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
              вернути помилка_компіляції;
            }
          }
          хх = хх + 1;
        }
        пх = пх + 1;
      }
      вернути пусто;
    }
    ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
    вернути помилка_компіляції;
  }

  дія дозаповнити_шаблон(обʼєкт_шаблону: адреса<ОбʼєктШаблону>, К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніШаблон>): адреса<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    якщо обʼєкт_шаблону.параметри.розмір != дані.кількість_параметрів {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Кількість параметрів не співпадає");
      вернути помилка_компіляції;
    }
    змінна ціль пх: позитивне = 0;
    поки пх < обʼєкт_шаблону.параметри.розмір {
      ціль параметр = обʼєкт_шаблону.параметри.дані[пх];
      ціль асд_параметр = дані.параметри[пх].значення;
      якщо strcmp(параметр, асд_параметр) != 0 {
        ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Назви параметрів шаблону не співпадають");
        вернути помилка_компіляції;
      }
      пх = пх + 1;
    }
    якщо обʼєкт_шаблону.вид == ВидШаблонуЗвичайний {
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    } інакше якщо обʼєкт_шаблону.вид == ВидШаблонуСтруктури {
      якщо дані.значення.вид == АСДВидСтруктура {
        вернути дозаповнити_шаблон_структури(обʼєкт_шаблону, К, інформація_середовища, дані.значення.місцезнаходження, дані.значення.дані як адреса<АСДДаніСтруктура>);
      }
    } інакше якщо обʼєкт_шаблону.вид == ВидШаблонуДії {
      якщо дані.значення.вид == АСДВидДія {
        вернути дозаповнити_шаблон_дії(обʼєкт_шаблону, К, інформація_середовища, дані.значення.місцезнаходження, дані.значення.дані як адреса<АСДДаніДія>);
      }
    } інакше якщо обʼєкт_шаблону.вид == ВидШаблонуГрупиДій {
      якщо дані.значення.вид == АСДВидДія {
        вернути дозаповнити_шаблон_групи_дій(обʼєкт_шаблону, К, інформація_середовища, дані.значення.місцезнаходження, дані.значення.дані як адреса<АСДДаніДія>);
      }
    }
    ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
    вернути помилка_компіляції;
  }

  місцева дія скомпілювати_визначити_шаблон(К: адреса<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: адреса<Місцезнаходження>, дані: адреса<АСДДаніШаблон>): адреса<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    змінна ціль обʼєкт_з_середовища: Обʼєкт;
    ціль успіх_отримання_з_середовища = отримати_з_локального_середовища(інформація_середовища.середовище, назва, обʼєкт_з_середовища::адреса);
    якщо успіх_отримання_з_середовища == так {
      якщо обʼєкт_з_середовища.вид == ВидОбʼєктаШаблону {
        ціль обʼєкт_шаблону = обʼєкт_з_середовища.дані як адреса<ОбʼєктШаблону>;
        вернути дозаповнити_шаблон(обʼєкт_шаблону, К, інформація_середовища, місцезнаходження, дані);
      }
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    } інакше {
      ціль результат_компіляції_шаблону = скомпілювати_шаблон(К, інформація_середовища, місцезнаходження, дані);
      якщо результат_компіляції_шаблону.помилка != пусто {
        вернути результат_компіляції_шаблону.помилка;
      }
      змінити_в_середовищі(інформація_середовища.середовище, назва, результат_компіляції_шаблону.обʼєкт);
    }
    вернути пусто;
  }
}