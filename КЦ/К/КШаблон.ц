взяти визначення К;

секція ц {
  дія порівняти_списки_обʼєктів_типів(с1: комірка<список<комірка<ОбʼєктТипу>>>, с2: комірка<список<комірка<ОбʼєктТипу>>>): логічне {
    якщо с1.довжина != с2.довжина {
      вернути ні;
    }
    змінна х: позитивне = 0;
    поки х < с1.довжина {
      якщо перевірити_тип(с1.дані[х], с2.дані[х]) == ні {
        вернути ні;
      }
      х = х + 1;
    }
    вернути так;
  }

  місцева дія скомпілювати_шаблон(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніШаблон>): Результат {
    ціль назва = дані.ідентифікатор.значення;
    ціль середовище_компіляції_шаблону = створити_середовище(інформація_середовища.середовище);
    ціль обʼєкт_шаблону = виділити<ОбʼєктШаблону>();
    обʼєкт_шаблону.назва = назва;
    обʼєкт_шаблону.інформація_середовища_компіляції = ІнформаціяСередовища {
      середовище = середовище_компіляції_шаблону,
      обʼєкт_дії = інформація_середовища.обʼєкт_дії,
      llvm_block = інформація_середовища.llvm_block,
      інформація_виконання_шаблону = інформація_середовища.інформація_виконання_шаблону
    };
    обʼєкт_шаблону.параметри = виділити_список<памʼять<п8>>();
    обʼєкт_шаблону.карта_готових_значень = виділити_карту<комірка<список<комірка<ОбʼєктТипу>>>, Обʼєкт>(порівняти_списки_обʼєктів_типів);
    обʼєкт_шаблону.асд_значення = дані.значення;
    змінна пх: позитивне = 0;
    поки пх < дані.кількість_параметрів {
      ціль асд_ідентифікатор = дані.параметри[пх];
      додати_до_списку<памʼять<п8>>(обʼєкт_шаблону.параметри, асд_ідентифікатор.значення);
      пх = пх + 1;
    }
    змінити_в_середовищі(інформація_середовища.середовище, назва, Обʼєкт { ВидОбʼєктаШаблону, дані = обʼєкт_шаблону });
    вернути Результат { Обʼєкт { ВидОбʼєктаШаблону, дані = обʼєкт_шаблону }, помилка = пусто };
  }

  місцева дія скомпілювати_визначити_шаблон(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніШаблон>): комірка<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    змінна обʼєкт_з_середовища: Обʼєкт;
    ціль успіх_отримання_з_середовища = отримати_з_локального_середовища(інформація_середовища.середовище, назва, комірка(обʼєкт_з_середовища));
    якщо успіх_отримання_з_середовища == так {
      якщо обʼєкт_з_середовища.вид == ВидОбʼєктаШаблону {
        ціль обʼєкт_шаблону = обʼєкт_з_середовища.дані як комірка<ОбʼєктШаблону>;
        якщо дані.значення.вид == АСДВидСтруктура {
          ціль дані_значення = дані.значення.дані як комірка<АСДДаніСтруктура>;
          якщо дані_значення.кількість_параметрів != 0 {
            якщо обʼєкт_шаблону.асд_значення.вид == АСДВидСтруктура {
              ціль дані_значення_шаблону = обʼєкт_шаблону.асд_значення.дані як комірка<АСДДаніСтруктура>;
              якщо дані_значення_шаблону.кількість_параметрів == 0 {
                якщо обʼєкт_шаблону.параметри.довжина != дані.кількість_параметрів {
                  ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Кількість параметрів не співпадає");
                  вернути помилка_компіляції;
                }
                // потім: перевірити назви параметрів шаблону
                змінна пх: позитивне = 0;
                поки пх < обʼєкт_шаблону.параметри.довжина {
                  ціль параметр = обʼєкт_шаблону.параметри.дані[пх];
                  ціль асд_параметр = дані.параметри[пх].значення;
                  якщо strcmp(параметр, асд_параметр) != 0 {
                    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Назви параметрів шаблону не співпадають");
                    вернути помилка_компіляції;
                  }
                  пх = пх + 1;
                }
                обʼєкт_шаблону.асд_значення = дані.значення;
                пх = 0;
                поки пх < обʼєкт_шаблону.карта_готових_значень.елементи.довжина {
                  ціль ек = обʼєкт_шаблону.карта_готових_значень.елементи.дані[пх];
                  ціль к = ек.значення;
                  ціль обʼєкт_типу = к.дані як комірка<ОбʼєктТипу>;
                  ціль помилка_заповнення = заповнити_структуру(
                    К,
                    обʼєкт_типу,
                    обʼєкт_шаблону.інформація_середовища_компіляції, // потім: здається це неправильно
                    дані_значення
                  );
                  якщо помилка_заповнення != пусто {
                    вернути помилка_заповнення;
                  }
                  пх = пх + 1;
                }
                вернути пусто;
              }
            }
          }
        } інакше якщо дані.значення.вид == АСДВидДія {
          ціль дані_значення = дані.значення.дані як комірка<АСДДаніДія>;
          якщо дані_значення.видимість != АСДВидимістьВнутрішня {
            ціль помилка_компіляції = виділити_помилку_компіляції_шаблон_дії_може_мати_лише_внутрішню_видимість(місцезнаходження);
            вернути помилка_компіляції;
          }
          // ...
        }
      }
      ціль помилка_компіляції = виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження, назва);
      вернути помилка_компіляції;
    } інакше {
      якщо дані.значення.вид == АСДВидШаблон {
        ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Неможливо створити шаблон для шаблону");
        вернути помилка_компіляції;
      }
      якщо дані.значення.вид == АСДВидДія {
        ціль дані_значення = дані.значення.дані як комірка<АСДДаніДія>;
        якщо дані_значення.видимість != АСДВидимістьВнутрішня {
          ціль помилка_компіляції = виділити_помилку_компіляції_шаблон_дії_може_мати_лише_внутрішню_видимість(місцезнаходження);
          вернути помилка_компіляції;
        }
      }
      ціль результат_компіляції_шаблону = скомпілювати_шаблон(К, інформація_середовища, місцезнаходження, дані);
      якщо результат_компіляції_шаблону.помилка != пусто {
        вернути результат_компіляції_шаблону.помилка;
      }
      змінити_в_середовищі(інформація_середовища.середовище, назва, результат_компіляції_шаблону.обʼєкт);
    }
    вернути пусто;
  }
}