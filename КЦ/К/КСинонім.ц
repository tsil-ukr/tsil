взяти визначення К;

секція ц {
  місцева дія скомпілювати_синонім(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніСинонім>): Результат {
    ціль назва = дані.ідентифікатор.значення;
    змінна обʼєкт: Обʼєкт;
    ціль асд_значення = дані.значення;
    якщо асд_значення.вид == АСДВидЗвернутись {
      ціль дані = асд_значення.дані як комірка<АСДДаніЗвернутись>;
      ціль назва = дані.ідентифікатор.значення;
      ціль успіх_отримання_зі_середовища = отримати_зі_середовища(інформація_середовища.середовище, назва, комірка(обʼєкт));
      якщо успіх_отримання_зі_середовища == ні {
        ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Субʼєкт не визначено");
        вернути Результат { помилка = помилка_компіляції };
      }
    } інакше якщо асд_значення.вид == АСДВидЗначенняЧисло {
      ціль дані = асд_значення.дані як комірка<АСДДаніЗначенняЧисло>;
      вернути скомпілювати_число(К, інформація_середовища, асд_значення.місцезнаходження, дані, пусто);
    } інакше якщо асд_значення.вид == АСДВидОтриматиЗіСекції {
      ціль дані = асд_значення.дані як комірка<АСДДаніОтриматиЗіСекції>;
      ціль результат_компіляції_значення = скомпілювати_значення(К, інформація_середовища, дані.обʼєкт, пусто, ні);
      якщо результат_компіляції_значення.помилка != пусто {
        вернути Результат { помилка = результат_компіляції_значення.помилка };
      }
      ціль обʼєкт_результату = результат_компіляції_значення.обʼєкт;
      якщо обʼєкт_результату.вид == ВидОбʼєктаСекції {
        ціль обʼєкт_секції = обʼєкт.дані як комірка<ОбʼєктСекції>;
        ціль назва = дані.ідентифікатор.значення;
        ціль успіх_отримання_зі_середовища = отримати_з_локального_середовища(обʼєкт_секції.середовище, назва, комірка(обʼєкт));
        якщо успіх_отримання_зі_середовища == ні {
          ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Субʼєкт не визначено");
          вернути Результат { помилка = помилка_компіляції };
        }
      } інакше {
        ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не реалізовано");
        вернути Результат { помилка = помилка_компіляції };
      }
    } інакше {
      ціль помилка_компіляції = виділити_помилку_компіляції(пусто, ю8"Не вдалося скомпілювати значення");
      вернути Результат { помилка = помилка_компіляції };
    }
    вернути Результат { обʼєкт, помилка = пусто };
  }

  місцева дія скомпілювати_визначити_синонім(К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, дані: комірка<АСДДаніСинонім>): комірка<ПомилкаКомпіляції> {
    ціль назва = дані.ідентифікатор.значення;
    змінна обʼєкт_з_середовища: Обʼєкт;
    ціль успіх_отримання_з_середовища = отримати_з_локального_середовища(інформація_середовища.середовище, назва, комірка(обʼєкт_з_середовища));
    якщо успіх_отримання_з_середовища == так {
      ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Субʼєкт вже визначено");
      вернути помилка_компіляції;
    } інакше {
      ціль результат_компіляції_синоніма = скомпілювати_синонім(К, інформація_середовища, місцезнаходження, дані);
      якщо результат_компіляції_синоніма.помилка != пусто {
        вернути результат_компіляції_синоніма.помилка;
      }
      змінити_в_середовищі(інформація_середовища.середовище, назва, результат_компіляції_синоніма.обʼєкт);
    }
    вернути пусто;
  }
}