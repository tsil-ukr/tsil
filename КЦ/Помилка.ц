взяти визначення Ц;

зовнішня дія позитивне_в_ю8(значення: позитивне): памʼять<п8>;

дія видимість_в_ю8(видимість: позитивне): памʼять<п8> {
  якщо видимість == АСДВидимістьЗовнішня {
    вернути ю8"зовнішня";
  } інакше якщо видимість == АСДВидимістьМісцева {
    вернути ю8"місцева";
  } інакше {
    вернути ю8"внутрішня";
  }
}

секція ц {
  місцева дія виділити_помилку_компіляції(місцезнаходження: комірка<Місцезнаходження>, повідомлення: памʼять<п8>): комірка<ПомилкаКомпіляції> {
    ціль помилка = виділити<ПомилкаКомпіляції>();
    помилка.місцезнаходження = місцезнаходження;
    помилка.повідомлення = повідомлення;
    вернути помилка;
  }

  місцева дія виділити_помилку_компіляції_субʼєкт_вже_визначено(місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>): комірка<ПомилкаКомпіляції> {
    ціль помилка_компіляції = виділити<ПомилкаКомпіляції>();
    помилка_компіляції.місцезнаходження = місцезнаходження;
    ціль буфер_повідомлення = створити_буфер_ю8();
    додати_до_буфера_ю8(буфер_повідомлення, ю8"Субʼєкт \"");
    додати_до_буфера_ю8(буфер_повідомлення, назва);
    додати_до_буфера_ю8(буфер_повідомлення, ю8"\" вже визначено");
    помилка_компіляції.повідомлення = створити_ю8_сі_з_буфера(буфер_повідомлення);
    звільнити_буфер_ю8(буфер_повідомлення);
    вернути помилка_компіляції;
  }

  дія обʼєкт_типу_як_ю8сі(обʼєкт_типу: комірка<ОбʼєктТипу>): памʼять<п8> {
    вернути ю8"...";
  }

  місцева дія виділити_помилку_неможливо_виконати(місцезнаходження: комірка<Місцезнаходження>, обʼєкт: Обʼєкт): комірка<ПомилкаКомпіляції> {
    ціль помилка_компіляції = виділити<ПомилкаКомпіляції>();
    помилка_компіляції.місцезнаходження = місцезнаходження;
    ціль буфер_повідомлення = створити_буфер_ю8();
    додати_до_буфера_ю8(буфер_повідомлення, ю8"Неможливо виконати");
    якщо обʼєкт.вид == ВидОбʼєктаТипу {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" структуру");
    } інакше якщо обʼєкт.вид == ВидОбʼєктаДії {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" дію");
    } інакше якщо обʼєкт.вид == ВидОбʼєктаЗначення {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" \"");
      ціль обʼєкт_значення = обʼєкт.дані як ОбʼєктЗначення;
      додати_до_буфера_ю8(буфер_повідомлення, обʼєкт_типу_як_ю8сі(обʼєкт_значення.тип));
      додати_до_буфера_ю8(буфер_повідомлення, ю8"\"");
    } інакше якщо обʼєкт.вид == ВидОбʼєктаСекції {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" секцію");
    } інакше якщо обʼєкт.вид == ВидОбʼєктаНезавантаженогоЗначення {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" \"");
      додати_до_буфера_ю8(буфер_повідомлення, ю8" незавантажене значення \"");
      ціль обʼєкт_незавантаженого_значення = обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      додати_до_буфера_ю8(буфер_повідомлення, обʼєкт_типу_як_ю8сі(обʼєкт_незавантаженого_значення.тип));
      додати_до_буфера_ю8(буфер_повідомлення, ю8"\"");
    } інакше якщо обʼєкт.вид == ВидОбʼєктаШаблону {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" шаблон");
    } інакше {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" невідоме значення (вітання, ви натрапили на помилку компілятора)");
    }
    помилка_компіляції.повідомлення = створити_ю8_сі_з_буфера(буфер_повідомлення);
    звільнити_буфер_ю8(буфер_повідомлення);
    вернути помилка_компіляції;
  }

  місцева дія виділити_помилку_компіляції_невірна_кількість_параметрів(місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікується: позитивне, отримано: позитивне): комірка<ПомилкаКомпіляції> {
    ціль помилка_компіляції = виділити<ПомилкаКомпіляції>();
    помилка_компіляції.місцезнаходження = місцезнаходження;
    ціль буфер_повідомлення = створити_буфер_ю8();
    додати_до_буфера_ю8(буфер_повідомлення, ю8"Невірна кількість параметрів");
    якщо назва != пусто {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" для \"");
      додати_до_буфера_ю8(буфер_повідомлення, назва);
      додати_до_буфера_ю8(буфер_повідомлення, ю8"\"");
    }
    додати_до_буфера_ю8(буфер_повідомлення, ю8": очікується ");
    додати_до_буфера_ю8(буфер_повідомлення, позитивне_в_ю8(очікується));
    додати_до_буфера_ю8(буфер_повідомлення, ю8", отримано ");
    додати_до_буфера_ю8(буфер_повідомлення, позитивне_в_ю8(отримано));
    помилка_компіляції.повідомлення = створити_ю8_сі_з_буфера(буфер_повідомлення);
    звільнити_буфер_ю8(буфер_повідомлення);
    вернути помилка_компіляції;
  }

  місцева дія виділити_помилку_компіляції_невірна_видимість(місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікується: позитивне, отримано: позитивне): комірка<ПомилкаКомпіляції> {
    ціль помилка_компіляції = виділити<ПомилкаКомпіляції>();
    помилка_компіляції.місцезнаходження = місцезнаходження;
    ціль буфер_повідомлення = створити_буфер_ю8();
    додати_до_буфера_ю8(буфер_повідомлення, ю8"Невірна видимість");
    якщо назва != пусто {
      додати_до_буфера_ю8(буфер_повідомлення, ю8" для \"");
      додати_до_буфера_ю8(буфер_повідомлення, назва);
      додати_до_буфера_ю8(буфер_повідомлення, ю8"\"");
    }
    додати_до_буфера_ю8(буфер_повідомлення, ю8": очікується ");
    додати_до_буфера_ю8(буфер_повідомлення, видимість_в_ю8(очікується));
    додати_до_буфера_ю8(буфер_повідомлення, ю8", отримано ");
    додати_до_буфера_ю8(буфер_повідомлення, видимість_в_ю8(отримано));
    помилка_компіляції.повідомлення = створити_ю8_сі_з_буфера(буфер_повідомлення);
    звільнити_буфер_ю8(буфер_повідомлення);
    вернути помилка_компіляції;
  }
}