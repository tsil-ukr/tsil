взяти визначення КЦ;

секція КЦ {
  зовнішня дія скомпілювати_операцію(компілятор: адреса<Компілятор>, контекст: Контекст, дані_операції: розбирач::ДаніСполукиОперація, місцезнаходження: розбирач::Місцезнаходження): РезультатОбʼєкта {
    змінна результат_ліво = скомпілювати_значення(компілятор, контекст, дані_операції.ліво, пусто);
    якщо результат_ліво.помилка != пусто {
      вернути РезультатОбʼєкта { ..., помилка = результат_ліво.помилка };
    }

    змінна очікуваний_тип_право: адреса<ОбʼєктТипу> = пусто;

    якщо результат_ліво.обʼєкт.вид == ВидОбʼєктаЗначення {
      змінна дані_обʼєкта = результат_ліво.обʼєкт.дані як ОбʼєктЗначення;
      очікуваний_тип_право = дані_обʼєкта.тип;
    } інакше якщо результат_ліво.обʼєкт.вид == ВидОбʼєктаНезавантаженеЗначення {
      змінна дані_обʼєкта = результат_ліво.обʼєкт.дані як ОбʼєктНезавантаженогоЗначення;
      очікуваний_тип_право = дані_обʼєкта.тип;
    }

    змінна результат_право = скомпілювати_значення(компілятор, контекст, дані_операції.право, очікуваний_тип_право);
    якщо результат_право.помилка != пусто {
      вернути РезультатОбʼєкта { ..., помилка = результат_право.помилка };
    }

    змінна ліво = результат_ліво.обʼєкт;
    змінна право = результат_право.обʼєкт;

    якщо дані_операції.вид == розбирач::ВидОпераціїДодавання {
      вернути обʼєкт_додати(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїВіднімання {
      вернути обʼєкт_відняти(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїМноження {
      вернути обʼєкт_помножити(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїДілення {
      вернути обʼєкт_поділити(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїМодуль {
      вернути обʼєкт_поділити_за_модулем(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїЗсувВліво {
      вернути обʼєкт_зсунути_вліво(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїЗсувВправо {
      вернути обʼєкт_зсунути_вправо(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїБільше {
      вернути обʼєкт_більше(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїМенше {
      вернути обʼєкт_менше(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїБільшеРівне {
      вернути обʼєкт_більше_рівно(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїМеншеРівне {
      вернути обʼєкт_менше_рівно(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїРівне {
      вернути обʼєкт_рівно(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїНерівне {
      вернути обʼєкт_не_рівно(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїДІ {
      вернути обʼєкт_ді(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїДАБО {
      вернути обʼєкт_дабо(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїВАБО {
      вернути обʼєкт_вабо(компілятор, контекст, місцезнаходження, ліво, Аргумент { право, дані_операції.право.місцезнаходження });
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїІ {
      //
    } інакше якщо дані_операції.вид == розбирач::ВидОпераціїАБО {
      //
    }

    вернути РезультатОбʼєкта {
      помилка = створити_помилку(
        компілятор,
        "Операція не підтримується.",
        створити_місцезнаходження_помилки_з_місцезнаходження(компілятор, контекст.розібраний_текст, місцезнаходження)
      ),
      ...
    };
  }
}