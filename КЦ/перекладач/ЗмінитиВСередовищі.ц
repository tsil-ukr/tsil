взяти визначення КЦ;

секція КЦ {
  місцева дія скомпілювати_змінити_в_середовищі(компілятор: адреса<Компілятор>, контекст: Контекст, дані_записати: розбирач::ДаніСполукиЗаписати, місцезнаходження: розбирач::Місцезнаходження): РезультатАбоПомилка {
    змінна назва_т8 = т8 { 0, пусто };
    
    якщо не розбирач::отримати_значення_ідентифікатора(
      ю8 { контекст.розібраний_текст.текст_коду.значення.розмір, контекст.розібраний_текст.текст_коду.значення.дані },
      контекст.розібраний_текст.слова,
      дані_записати.ідентифікатор,
      назва_т8::адреса
    ) { 
      вернути РезультатАбоПомилка {
        помилка = створити_помилку(
          компілятор,
          "Не вдалось отримати назву субʼєкта.",
          створити_місцезнаходження_помилки_з_місцезнаходження_розбирача(компілятор, контекст.розібраний_текст, місцезнаходження)
        )
      };
    }

    змінна назва = назва_без_копіювання(компілятор, назва_т8);

    змінна обʼєкт_з_середовища: Обʼєкт;
    якщо знайти_в_середовищі_рекурсивно(контекст.середовище, назва, обʼєкт_з_середовища::адреса) == ні {
      вернути РезультатАбоПомилка {
        помилка = створити_помилку_субʼєкт_не_визначено(
          компілятор,
          Місцезнаходження { контекст.розібраний_текст, місцезнаходження.позиція_початкового_слова },
          назва_т8
        )
      };
    }

    якщо обʼєкт_з_середовища.вид != ВидОбʼєктаНезавантаженеЗначення {
      вернути РезультатАбоПомилка {
        помилка = створити_помилку(
          компілятор,
          "Неможливо записати.",
          створити_місцезнаходження_помилки_з_місцезнаходження_розбирача(компілятор, контекст.розібраний_текст, місцезнаходження)
        ),
      };
    }

    змінна обʼєкт_незавантаженого_значення = обʼєкт_з_середовища.дані як ОбʼєктНезавантаженогоЗначення;

    змінна результат_значення = скомпілювати_значення_як_значення(компілятор, контекст, дані_записати.значення, обʼєкт_незавантаженого_значення.тип);
    якщо результат_значення.помилка != пусто {
      вернути РезультатАбоПомилка { помилка = результат_значення.помилка };
    }

    якщо перевірити_тип_на_запис_і_конвертувати_якщо_треба(компілятор, обʼєкт_незавантаженого_значення.тип, результат_значення.обʼєкт_значення::адреса) == ні {
      вернути РезультатАбоПомилка {
        помилка = створити_помилку_невірний_тип_вернути(
          компілятор,
          Місцезнаходження { контекст.розібраний_текст, дані_записати.значення.місцезнаходження.позиція_початкового_слова },
          обʼєкт_незавантаженого_значення.тип,
          результат_значення.обʼєкт_значення.тип
        )
      };
    }

    ПМ::вказівка_записати(
      контекст.кк_дії.поточний_крок.пм_крок,
      результат_значення.обʼєкт_значення.пм_значення,
      обʼєкт_незавантаженого_значення.пм_значення
    );

    вернути РезультатАбоПомилка { пусто };
  }
}