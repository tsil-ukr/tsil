взяти визначення КЦ;

секція КЦ {
  місцева дія скомпілювати_однооперацію(компілятор: адреса<Компілятор>, контекст: Контекст, дані_однооперації: розбирач::ДаніСполукиОднооперація, місцезнаходження: розбирач::Місцезнаходження): РезультатОбʼєкта {
    змінна результат_значення = скомпілювати_значення(компілятор, контекст, пусто, дані_однооперації.значення, пусто);
    якщо результат_значення.помилка != пусто {
      вернути РезультатОбʼєкта { ..., помилка = результат_значення.помилка };
    }

    якщо дані_однооперації.вид == розбирач::ВидОдноопераціїЗаперечення {
      вернути обʼєкт_заперечити(компілятор, контекст, місцезнаходження, результат_значення.обʼєкт);
    } інакше якщо дані_однооперації.вид == розбирач::ВидОдноопераціїПлюс {
      вернути результат_значення;
    } інакше якщо дані_однооперації.вид == розбирач::ВидОдноопераціїМінус {
      вернути обʼєкт_унарний_мінус(компілятор, контекст, місцезнаходження, результат_значення.обʼєкт);
    } інакше якщо дані_однооперації.вид == розбирач::ВидОдноопераціїДвійковеЗаперечення {
      вернути обʼєкт_двійкове_заперечення(компілятор, контекст, місцезнаходження, результат_значення.обʼєкт);
    }

    вернути РезультатОбʼєкта {
      ...,
      помилка = створити_помилку(
        компілятор,
        "Однооперацію не втілено.",
        створити_місцезнаходження_помилки_з_місцезнаходження_розбирача(компілятор, контекст.розібраний_текст, місцезнаходження)
      )
    };
  }
}