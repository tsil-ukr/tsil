взяти визначення КЦ;

секція КЦ {
  місцева дія скомпілювати_вернути(компілятор: адреса<Компілятор>, контекст: Контекст, дані_вернути: розбирач::ДаніСполукиВернути, місцезнаходження: розбирач::Місцезнаходження) -> Результат {
    якщо контекст.кк_дії == пусто {
      вернути Результат {
        помилка = створити_помилку(
          компілятор,
          "Вернути можна лише всередині дії.",
          створити_місцезнаходження_помилки_з_місцезнаходження_розбирача(компілятор, контекст.розібраний_текст, місцезнаходження)
        )
      };
    }

    якщо контекст.кк_дії.значення_вернути.тип == компілятор.тип_ніщо {
      якщо дані_вернути.значення != пусто {
        змінна результат_значення = скомпілювати_значення_як_значення(компілятор, контекст, дані_вернути.значення, контекст.кк_дії.значення_вернути.тип);
        якщо результат_значення.помилка != пусто {
          вернути Результат { помилка = результат_значення.помилка };
        }

        вернути Результат {
          помилка = створити_помилку_невірний_тип_вернути(
            компілятор,
            Місцезнаходження { контекст.розібраний_текст, дані_вернути.значення.місцезнаходження.позиція_початкового_слова },
            контекст.кк_дії.значення_вернути.тип,
            результат_значення.обʼєкт_значення.тип
          )
        };
      }

      якщо ПМ::перевірити_чи_крок_закінчується_стрибком(контекст.кк_дії.поточний_крок.пм_крок) == ні {
        ПМ::вказівка_стрибнути(контекст.кк_дії.поточний_крок.пм_крок, контекст.кк_дії.крок_вернути.пм_крок);
      }

      вернути Результат { помилка = пусто };
    } інакше {
      якщо дані_вернути.значення == пусто {
        вернути Результат {
          помилка = створити_помилку_невірний_тип_вернути(
            компілятор,
            Місцезнаходження { контекст.розібраний_текст, місцезнаходження.позиція_початкового_слова },
            контекст.кк_дії.значення_вернути.тип,
            компілятор.тип_ніщо
          )
        };
      }

      змінна результат_значення = скомпілювати_значення_як_значення(компілятор, контекст, дані_вернути.значення, контекст.кк_дії.значення_вернути.тип);
      якщо результат_значення.помилка != пусто {
        вернути Результат { помилка = результат_значення.помилка };
      }

      якщо перевірити_тип_на_запис_і_конвертувати_якщо_треба(компілятор, контекст.кк_дії.значення_вернути.тип, результат_значення.обʼєкт_значення::адреса) == ні {
        вернути Результат {
          помилка = створити_помилку_невірний_тип_вернути(
            компілятор,
            Місцезнаходження { контекст.розібраний_текст, дані_вернути.значення.місцезнаходження.позиція_початкового_слова },
            контекст.кк_дії.значення_вернути.тип,
            результат_значення.обʼєкт_значення.тип
          )
        };
      }

      ПМ::вказівка_записати(
        контекст.кк_дії.поточний_крок.пм_крок,
        результат_значення.обʼєкт_значення.пм_значення,
        контекст.кк_дії.значення_вернути.пм_значення
      );

      якщо ПМ::перевірити_чи_крок_закінчується_стрибком(контекст.кк_дії.поточний_крок.пм_крок) == ні {
        ПМ::вказівка_стрибнути(контекст.кк_дії.поточний_крок.пм_крок, контекст.кк_дії.крок_вернути.пм_крок);
      }

      вернути Результат { помилка = пусто };
    }
  }
}