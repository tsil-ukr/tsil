взяти визначення КЦ;

секція КЦ {
  місцева дія скомпілювати_крок(компілятор: адреса<Компілятор>, контекст: Контекст, дані_кроку: розбирач::ДаніСполукиКрок, місцезнаходження: розбирач::Місцезнаходження): Результат {
    змінна назва_т8 = т8 { 0, пусто };
    
    якщо не розбирач::отримати_значення_слова(
      ю8 { контекст.розібраний_текст.текст_коду.значення.розмір, контекст.розібраний_текст.текст_коду.значення.дані },
      контекст.розібраний_текст.слова.дані[дані_кроку.ідентифікатор.позиція_слова],
      назва_т8::адреса
    ) {
      вернути Результат {
        помилка = створити_помилку(
          компілятор,
          "Не вдалось отримати назву кроку.",
          створити_місцезнаходження_помилки_з_місцезнаходження_розбирача(компілятор, контекст.розібраний_текст, місцезнаходження)
        )
      };
    }
    
    змінна назва = назва_без_копіювання(компілятор, назва_т8);

    змінна п: природне = 0;

    поки п < контекст.кк_дії.обʼєкт_дії.кроки.розмір {
      якщо назва == контекст.кк_дії.обʼєкт_дії.кроки.дані[п].назва {
        вернути Результат {
          помилка = створити_помилку_субʼєкт_вже_визначено(
            компілятор,
            Місцезнаходження { контекст.розібраний_текст, дані_кроку.ідентифікатор.позиція_слова },
            назва_т8
          )
        };
      }

      п += 1;
    }

    змінна пм_крок = ПМ::створити_крок(контекст.кк_дії.обʼєкт_дії.пм_інструкція, отримати_назву(компілятор, назва_т8));

    покласти_крок(
      компілятор,
      контекст.кк_дії.обʼєкт_дії.кроки::адреса,
      Крок { назва, контекст.кк_дії.обʼєкт_дії, пм_крок }
    );

    якщо ПМ::перевірити_чи_крок_закінчується_стрибком(контекст.кк_дії.поточний_крок.пм_крок) == ні {
      ПМ::вказівка_стрибнути(контекст.кк_дії.поточний_крок.пм_крок, пм_крок);
    }

    контекст.кк_дії.поточний_крок = Крок { назва, контекст.кк_дії.обʼєкт_дії, пм_крок };

    вернути Результат {
      помилка = пусто
    };
  }
}