взяти визначення КЦ;

секція КЦ {
  місцева дія виділити_обʼєкт_типу(компілятор: адреса<Компілятор>): адреса<ОбʼєктТипу> {
    змінна обʼєкт_типу = виділити<ОбʼєктТипу>(компілятор);
    обʼєкт_типу.наступний = пусто;
    обʼєкт_типу.вид = 0;
    обʼєкт_типу.пм_тип = пусто;
    якщо компілятор.перший_обʼєкт_типу == пусто {
      компілятор.перший_обʼєкт_типу = обʼєкт_типу;
    }
    якщо компілятор.останній_обʼєкт_типу == пусто {
      компілятор.останній_обʼєкт_типу = обʼєкт_типу;
    } інакше {
      компілятор.останній_обʼєкт_типу.наступний = обʼєкт_типу;
      компілятор.останній_обʼєкт_типу = обʼєкт_типу;
    }
    вернути обʼєкт_типу;
  }

  місцева дія створити_простий_тип(компілятор: адреса<Компілятор>, назва: адреса<Назва>, пм_тип: адреса<ПМ::Тип>): адреса<ОбʼєктТипу> {
    змінна обʼєкт_типу = виділити_обʼєкт_типу(компілятор);
    обʼєкт_типу.вид = ВидОбʼєктаТипуПростий;
    обʼєкт_типу.пм_тип = пм_тип;
    обʼєкт_типу.дані = ДаніОбʼєктаТипуПростий {
      назва = назва
    };
    вернути обʼєкт_типу;
  }

  місцева дія створити_тип_адреси(компілятор: адреса<Компілятор>, тип_даних: адреса<ОбʼєктТипу>): адреса<ОбʼєктТипу> {
    змінна обʼєкт_типу = виділити_обʼєкт_типу(компілятор);
    обʼєкт_типу.вид = ВидОбʼєктаТипуАдреса;
    обʼєкт_типу.пм_тип = компілятор.тип_адреса.пм_тип;
    обʼєкт_типу.дані = ДаніОбʼєктаТипуАдреса {
      тип_даних = тип_даних
    };
    вернути обʼєкт_типу;
  }

  місцева дія створити_тип_памʼяті(компілятор: адреса<Компілятор>, тип_даних: адреса<ОбʼєктТипу>): адреса<ОбʼєктТипу> {
    змінна обʼєкт_типу = виділити_обʼєкт_типу(компілятор);
    обʼєкт_типу.вид = ВидОбʼєктаТипуПамʼять;
    обʼєкт_типу.пм_тип = компілятор.тип_памʼять.пм_тип;
    обʼєкт_типу.дані = ДаніОбʼєктаТипуПамʼять {
      тип_даних = тип_даних
    };
    вернути обʼєкт_типу;
  }

  місцева дія створити_тип_дії(компілятор: адреса<Компілятор>, параметри: Параметри, тип_результату: адреса<ОбʼєктТипу>): адреса<ОбʼєктТипу> {
    змінна обʼєкт_типу = виділити_обʼєкт_типу(компілятор);
    обʼєкт_типу.вид = ВидОбʼєктаТипуДія;
    обʼєкт_типу.пм_тип = компілятор.тип_адреса.пм_тип;

    змінна пм_параметри = ПМ::Параметри { 0, пусто, 0 };
    змінна п: позитивне = 0;
    поки п < параметри.розмір {
      ПМ::покласти_параметр(компілятор.пм_модуль, пм_параметри::адреса, ПМ::Параметр { параметри.дані[п].тип.пм_тип });
      п += 1;
    }

    змінна пм_тип_інструкції = ПМ::створити_тип_інструкції(
      компілятор.пм_модуль,
      пм_параметри,
      тип_результату.пм_тип
    );

    обʼєкт_типу.дані = ДаніОбʼєктаТипуДія {
      параметри = параметри,
      тип_результату = тип_результату,
      пм_тип_інструкції = пм_тип_інструкції
    };
    вернути обʼєкт_типу;
  }

  місцева дія створити_варіативний_тип(компілятор: адреса<Компілятор>, кількість_типів: позитивне, типи: памʼять<адреса<ОбʼєктТипу>>): адреса<ОбʼєктТипу> {
    змінна обʼєкт_типу = виділити_обʼєкт_типу(компілятор);
    обʼєкт_типу.вид = ВидОбʼєктаТипуВаріація;

    змінна найбільший_тип = типи[0];
    змінна розмір_найбільшого_типу: позитивне = ПМ::отримати_розмір_типу_для_виділення(компілятор.пм_модуль, типи[0].пм_тип);

    змінна п: позитивне = 1;

    поки п < кількість_типів {
      змінна тип = типи[п];
      змінна розмір = ПМ::отримати_розмір_типу_для_виділення(компілятор.пм_модуль, тип.пм_тип);

      якщо розмір > розмір_найбільшого_типу {
        найбільший_тип = тип;
        розмір_найбільшого_типу = розмір;
      }

      п += 1;
    }

    обʼєкт_типу.пм_тип = найбільший_тип.пм_тип;

    обʼєкт_типу.дані = ДаніОбʼєктаТипуВаріація {
      кількість_типів = кількість_типів,
      типи = типи,
      найбільший_тип = найбільший_тип
    };
    вернути обʼєкт_типу;
  }

  місцева дія знищити_обʼєкт_типу(компілятор: адреса<Компілятор>, обʼєкт_типу: адреса<ОбʼєктТипу>) {
    якщо обʼєкт_типу.вид == ВидОбʼєктаТипуСтруктура {
      змінна дані = обʼєкт_типу.дані як ДаніОбʼєктаТипуСтруктура;

      знищити_назву_якщо_копія(компілятор, дані.назва);
      знищити_параметри(компілятор, дані.параметри);
      знищити_назву_якщо_копія(компілятор, дані.повна_назва);
      знищити_готові_аргументи_шаблону(компілятор, дані.готові_аргументи_шаблону);
    } інакше якщо обʼєкт_типу.вид == ВидОбʼєктаТипуДія {
      змінна дані = обʼєкт_типу.дані як ДаніОбʼєктаТипуДія;

      знищити_параметри(компілятор, дані.параметри);
    } інакше якщо обʼєкт_типу.вид == ВидОбʼєктаТипуВаріація {
      змінна дані = обʼєкт_типу.дані як ДаніОбʼєктаТипуВаріація;

      звільнити_памʼять(компілятор, дані.типи);
    }

    звільнити(компілятор, обʼєкт_типу);
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_додати(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_відняти(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_помножити(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_поділити(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_поділити_за_модулем(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_більше(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_менше(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_більше_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_менше_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_не_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_зсунути_вліво(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_зсунути_вправо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_ді(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_дабо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_вабо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_як(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_отримати_властивість(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: адреса<Назва>, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    якщо перевірити_чи_тип_повний(компілятор, обʼєкт_типу) == ні {
      вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
    }

    якщо назва == отримати_назву(компілятор, "розмір") {
      змінна розмір_типу = дізнатись_розмір_типу(компілятор, обʼєкт_типу);

      змінна розмір_типу_як_т8 = т8 { 0, пусто };

      якщо перетворити_позитивне_на_т8(компілятор, розмір_типу, розмір_типу_як_т8::адреса) == ні {
        вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
      }

      змінна обʼєкт_сирого_значення = виділити_обʼєкт_сирого_значення(компілятор);
      обʼєкт_сирого_значення.дані = розмір_типу_як_т8;

      вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаСиреЗначення, дані = обʼєкт_сирого_значення }, помилка = пусто };
    }

    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_отримати_властивість_секції(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: адреса<Назва>, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    якщо обʼєкт_типу.вид == ВидОбʼєктаТипуСтруктура {
      змінна дані = обʼєкт_типу.дані як ДаніОбʼєктаТипуСтруктура;

      якщо дані.обʼєкт_секції != пусто {
        змінна обʼєкт_з_середовища: Обʼєкт;
        якщо знайти_в_середовищі(дані.обʼєкт_секції.середовище, назва, обʼєкт_з_середовища::адреса) {
          вернути РезультатОбʼєкта { обʼєкт_з_середовища, помилка = пусто };
        }
      }
    }

    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_отримати_за_позицією(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, позиція: Аргумент, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_виконати(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): РезультатОбʼєкта {
    якщо кількість_аргументів == 1 {
      змінна перший_аргумент = аргументи[0];

      змінна результат_як_значення = отримати_як_значення(
        компілятор,
        контекст,
        місцезнаходження,
        перший_аргумент.обʼєкт,
        обʼєкт_типу
      );
      якщо результат_як_значення.помилка != пусто {
        вернути РезультатОбʼєкта { ..., помилка = результат_як_значення.помилка };
      }

      змінна обʼєкт_значення = результат_як_значення.обʼєкт_значення;
      якщо обʼєкт_значення.тип == обʼєкт_типу {
        вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
      }

      якщо обʼєкт_типу == компілятор.тип_логічне {
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_логічне.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц8 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц16 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц32 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц64 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_ц64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п8 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п8.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п16 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п16.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п32 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п64 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_д32 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д32.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_д64 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_п64.пм_тип);
          обʼєкт_значення.пм_значення = ПМ::вказівка_перетворити(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення, компілятор.тип_д64.пм_тип);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
    }

    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_виконати_шаблон(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): РезультатОбʼєкта {
    якщо обʼєкт_типу == компілятор.тип_адреса {
      якщо кількість_аргументів != 1 {
        вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
      }

      змінна результат_компіляції_значення_аргумента = отримати_як_тип(
        компілятор,
        контекст,
        аргументи[0].місцезнаходження,
        аргументи[0].обʼєкт,
        ні
      );
      якщо результат_компіляції_значення_аргумента.помилка != пусто {
        вернути РезультатОбʼєкта { ..., помилка = результат_компіляції_значення_аргумента.помилка };
      }

      змінна обʼєкт_типу_комірки = створити_тип_адреси(компілятор, результат_компіляції_значення_аргумента.обʼєкт_типу);

      вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаТип, дані = обʼєкт_типу_комірки }, помилка = пусто };
    }

    якщо обʼєкт_типу == компілятор.тип_памʼять {
      якщо кількість_аргументів != 1 {
        вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
      }

      змінна результат_компіляції_значення_аргумента = отримати_як_тип(
        компілятор,
        контекст,
        аргументи[0].місцезнаходження,
        аргументи[0].обʼєкт,
        ні
      );
      якщо результат_компіляції_значення_аргумента.помилка != пусто {
        вернути РезультатОбʼєкта { ..., помилка = результат_компіляції_значення_аргумента.помилка };
      }

      змінна обʼєкт_типу_комірки = створити_тип_памʼяті(компілятор, результат_компіляції_значення_аргумента.обʼєкт_типу);

      вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаТип, дані = обʼєкт_типу_комірки }, помилка = пусто };
    }

    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_змінити_властивість(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: адреса<Назва>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_змінити_в_секції(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: адреса<Назва>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_змінити_за_позицією(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, позиція: Аргумент, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_унарний_мінус(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_заперечити(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  місцева дія обʼєкт_типу_двійкове_заперечення(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}