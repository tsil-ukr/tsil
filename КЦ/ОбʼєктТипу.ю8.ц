взяти визначення КЦ;

секція КЦ {
  зовнішня дія обʼєкт_типу_додати(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_відняти(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_помножити(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_поділити(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_поділити_за_модулем(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_більше(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_менше(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_більше_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_менше_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_не_рівно(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_зсунути_вліво(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_зсунути_вправо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_ді(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_дабо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_вабо(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_як(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_отримати_властивість(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: Назва, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    якщо перевірити_чи_тип_повний(компілятор, обʼєкт_типу) == ні {
      вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
    }

    якщо перевірити_назви(назва, назва_зовнішня("розмір"), пусто) {
      змінна розмір_типу = дізнатись_розмір_типу(компілятор, обʼєкт_типу);

      змінна розмір_типу_як_т8 = т8 { 0, пусто };

      якщо перетворити_позитивне_на_т8(компілятор, розмір_типу, розмір_типу_як_т8::адреса) == ні {
        вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
      }

      змінна обʼєкт_сирого_значення: ОбʼєктСирогоЗначення;
      обʼєкт_сирого_значення.вид = ВидСирогоОбʼєктаЧисло;
      обʼєкт_сирого_значення.дані = розмір_типу_як_т8;
      вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаСиреЗначення, дані = обʼєкт_сирого_значення як ОбʼєктСирогоЗначення }, помилка = пусто };
    }

    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_отримати_властивість_секції(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: Назва, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_отримати_за_позицією(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, позиція: Аргумент, очікуваний_тип: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_виконати(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): РезультатОбʼєкта {
    якщо кількість_аргументів == 1 {
      змінна перший_аргумент = аргументи[0];

      змінна результат_як_значення = отримати_як_значення(
        компілятор,
        контекст,
        місцезнаходження,
        перший_аргумент.обʼєкт,
        обʼєкт_типу
      );
      якщо результат_як_значення.помилка != пусто {
        вернути РезультатОбʼєкта { ..., помилка = результат_як_значення.помилка };
      }

      змінна обʼєкт_значення = результат_як_значення.обʼєкт_значення;
      якщо обʼєкт_значення.тип == обʼєкт_типу {
        вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
      }

      якщо обʼєкт_типу == компілятор.тип_логічне {
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_логічне(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц8 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_ц8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц16 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_ц16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц32 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_ц32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_ц64 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_ц64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п8 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_п8(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п16 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_п16(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п32 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_п32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_п64 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_д32 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д64_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_д32(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
      якщо обʼєкт_типу == компілятор.тип_д64 {
        якщо обʼєкт_значення.тип == компілятор.тип_логічне {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_логічне_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц8_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц16_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц32_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_ц64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_ц64_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п8 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п8_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п16 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п16_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п32_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_п64 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип == компілятор.тип_д32 {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_д32_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
        якщо обʼєкт_значення.тип.вид == ВидОбʼєктаТипуАдреса {
          обʼєкт_значення.тип = обʼєкт_типу;
          обʼєкт_значення.пм_значення = ПМ::перетворити_адресу_на_п64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          обʼєкт_значення.пм_значення = ПМ::перетворити_п64_на_д64(контекст.кк_дії.поточний_крок.пм_крок, обʼєкт_значення.пм_значення);
          вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
        }
      }
    }

    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_виконати_шаблон(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): РезультатОбʼєкта {
//    якщо обʼєкт_типу == компілятор.тип_адреса {
//      якщо кількість_аргументів != 1 {
//        ціль помилка_компіляції = виділити_помилку_компіляції_невірна_кількість_аргументів_шаблону(місцезнаходження, 1, кількість_аргументів);
//        вернути результат_помилка(помилка_компіляції);
//      }
//      ціль результат_компіляції_значення_аргумента = отримати_як_тип(К, інформація_середовища, аргументи[0].місцезнаходження, аргументи[0].обʼєкт, ні);
//      якщо результат_компіляції_значення_аргумента.помилка != пусто {
//        вернути результат_помилка(результат_компіляції_значення_аргумента.помилка);
//      }
//      ціль обʼєкт_типу_комірки = виділити_тип_адреси(К, результат_компіляції_значення_аргумента.обʼєкт_типу);
//      вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаТип, дані = обʼєкт_типу_комірки }, помилка = пусто };
//    }
//    якщо обʼєкт_типу == компілятор.тип_памʼять {
//      якщо кількість_аргументів != 1 {
//        ціль помилка_компіляції = виділити_помилку_компіляції_невірна_кількість_аргументів_шаблону(місцезнаходження, 1, кількість_аргументів);
//        вернути результат_помилка(помилка_компіляції);
//      }
//      ціль результат_компіляції_значення_аргумента = отримати_як_тип(К, інформація_середовища, аргументи[0].місцезнаходження, аргументи[0].обʼєкт, ні);
//      якщо результат_компіляції_значення_аргумента.помилка != пусто {
//        вернути результат_помилка(результат_компіляції_значення_аргумента.помилка);
//      }
//      ціль обʼєкт_типу_комірки = виділити_тип_памʼяті(К, результат_компіляції_значення_аргумента.обʼєкт_типу);
//      вернути РезультатОбʼєкта { Обʼєкт { ВидОбʼєктаТип, дані = обʼєкт_типу_комірки }, помилка = пусто };
//    }
//    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось виконати_шаблон");
//    вернути результат_помилка(помилка_компіляції);
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_змінити_властивість(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: Назва, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_змінити_в_секції(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, назва: Назва, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_змінити_за_позицією(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>, позиція: Аргумент, аргумент: Аргумент): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}

секція КЦ {
  зовнішня дія обʼєкт_типу_унарний_мінус(компілятор: адреса<Компілятор>, контекст: Контекст, місцезнаходження: розбирач::Місцезнаходження, обʼєкт_типу: адреса<ОбʼєктТипу>): РезультатОбʼєкта {
    вернути результат_обʼєкта_помилка(компілятор, контекст.розібраний_текст, місцезнаходження, "Не вдалось скомпілювати");
  }
}