взяти визначення ./КЦ;

секція КЦ {
  місцева дія створити_помилку_невірний_тип_вернути(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, очікуваний_тип: адреса<ОбʼєктТипу>, тип: адреса<ОбʼєктТипу>): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Невірний тип вернути: очікується \"");

    змінна назва_очікуваного_типу = отримати_повну_назву_типу(компілятор, очікуваний_тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_очікуваного_типу);
    звільнити_памʼять(компілятор, назва_очікуваного_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\", отримано \"");

    змінна назва_типу = отримати_повну_назву_типу(компілятор, тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_типу);
    звільнити_памʼять(компілятор, назва_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\".");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }

  місцева дія створити_помилку_невірний_тип_значення(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, очікуваний_тип: адреса<ОбʼєктТипу>, тип: адреса<ОбʼєктТипу>): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Невірний тип значення: очікується \"");

    змінна назва_очікуваного_типу = отримати_повну_назву_типу(компілятор, очікуваний_тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_очікуваного_типу);
    звільнити_памʼять(компілятор, назва_очікуваного_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\", отримано \"");

    змінна назва_типу = отримати_повну_назву_типу(компілятор, тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_типу);
    звільнити_памʼять(компілятор, назва_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\".");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }

  місцева дія створити_помилку_субʼєкт_не_визначено(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, ідентифікатор: т8): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Субʼєкт \"");
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, ідентифікатор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\" не визначено.");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }

  місцева дія створити_помилку_субʼєкт_вже_визначено(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, ідентифікатор: т8): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Субʼєкт \"");
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, ідентифікатор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\" вже визначено.");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }

  дія видимість_дії_як_т8(видимість: позитивне): т8 {
    якщо видимість == ВидимістьВнутрішня {
      вернути "внутрішня";
    }
    якщо видимість == ВидимістьМісцева {
      вернути "місцева";
    }
    якщо видимість == ВидимістьЗовнішня {
      вернути "зовнішня";
    }
    вернути т8 { 0, пусто };
  }

  місцева дія створити_помилку_видимість_дії_не_відповідає_задекларованій(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, очікується: позитивне, отримано: позитивне): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Видимість дії не відповідає задекларованій: очікується \"");
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, видимість_дії_як_т8(очікується));

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\", отримано \".");
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, видимість_дії_як_т8(отримано));
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\".");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }

  місцева дія створити_помилку_кількість_параметрів_дії_не_відповідає_задекларованій(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, очікується: позитивне, отримано: позитивне): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Кількість параметрів дії не відповідає задекларованій: очікується ");
    покласти_позитивне_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, очікується);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, ", отримано ");
    покласти_позитивне_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, отримано);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, ".");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }

  місцева дія створити_помилку_тип_параметра_дії_не_відповідає_задекларованому(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, назва: т8, очікуваний_тип: адреса<ОбʼєктТипу>, тип: адреса<ОбʼєктТипу>): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    якщо назва.розмір > 0 {
      покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Тип параметра \"");
      покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва);
      покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\" не відповідає задекларованому: очікується \"");
    } інакше {
      покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Тип параметра не відповідає задекларованому: очікується \"");
    }

    змінна назва_очікуваного_типу = отримати_повну_назву_типу(компілятор, очікуваний_тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_очікуваного_типу);
    звільнити_памʼять(компілятор, назва_очікуваного_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\", отримано \"");

    змінна назва_типу = отримати_повну_назву_типу(компілятор, тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_типу);
    звільнити_памʼять(компілятор, назва_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\".");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }

  місцева дія створити_помилку_тип_результату_дії_не_відповідає_задекларованому(компілятор: адреса<Компілятор>, місцезнаходження: Місцезнаходження, очікуваний_тип: адреса<ОбʼєктТипу>, тип: адреса<ОбʼєктТипу>): адреса<Помилка> {
    змінна накопичувач_т8 = зробити_накопичувач_т8(компілятор);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "Тип результату дії не відповідає задекларованому: очікується \"");

    змінна назва_очікуваного_типу = отримати_повну_назву_типу(компілятор, очікуваний_тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_очікуваного_типу);
    звільнити_памʼять(компілятор, назва_очікуваного_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\", отримано \"");

    змінна назва_типу = отримати_повну_назву_типу(компілятор, тип);
    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, назва_типу);
    звільнити_памʼять(компілятор, назва_типу.дані);

    покласти_в_накопичувач_т8(компілятор, накопичувач_т8::адреса, "\".");

    вернути створити_помилку_без_копіювання(
      компілятор,
      накопичувач_т8.значення,
      створити_місцезнаходження_помилки_з_місцезнаходження(
        компілятор,
        місцезнаходження
      )
    );
  }
}