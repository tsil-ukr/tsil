взяти визначення Ц;

секція ц {
  місцева дія обʼєкт_типу_додати(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось додати");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_відняти(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось відняти");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_помножити(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось помножити");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_поділити(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_поділити_за_модулем(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити_за_модулем");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_більше(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_менше(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_більше_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше_рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_менше_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше_рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_не_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось не_рівно");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_зсунути_вліво(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вліво");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_зсунути_вправо(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_зсунути_вправо_знаковий(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо_знаковий");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_ді(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось ді");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_дабо(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось дабо");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_вабо(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось вабо");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_як(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось як");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_отримати_властивість(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: комірка<ОбʼєктТипу>): Результат {
    якщо перевірити_чи_тип_повний(К, обʼєкт_типу) == ні {
      ціль помилка_компіляції = виділити_помилку_компіляції_виявлено_неповний_тип(місцезнаходження, Обʼєкт { ВидОбʼєктаТипу, дані = обʼєкт_типу });
      вернути Результат { помилка = помилка_компіляції };
    }
    якщо strcmp(назва, ю8"розмір") == 0 {
      ціль обʼєкт_значення = ОбʼєктЗначення {};
      якщо очікуваний_тип == К.тип_логічне {
        обʼєкт_значення.тип = К.тип_логічне;
        обʼєкт_значення.llvm_value = LLVM::const_uint1(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_ц8 {
        обʼєкт_значення.тип = К.тип_ц8;
        обʼєкт_значення.llvm_value = LLVM::const_int8(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_ц16 {
        обʼєкт_значення.тип = К.тип_ц16;
        обʼєкт_значення.llvm_value = LLVM::const_int16(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_ц32 {
        обʼєкт_значення.тип = К.тип_ц32;
        обʼєкт_значення.llvm_value = LLVM::const_int32(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_ц64 {
        обʼєкт_значення.тип = К.тип_ц64;
        обʼєкт_значення.llvm_value = LLVM::const_int64(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_п8 {
        обʼєкт_значення.тип = К.тип_п8;
        обʼєкт_значення.llvm_value = LLVM::const_uint8(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_п16 {
        обʼєкт_значення.тип = К.тип_п16;
        обʼєкт_значення.llvm_value = LLVM::const_uint16(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_п32 {
        обʼєкт_значення.тип = К.тип_п32;
        обʼєкт_значення.llvm_value = LLVM::const_uint32(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше якщо очікуваний_тип == К.тип_п64 {
        обʼєкт_значення.тип = К.тип_п64;
        обʼєкт_значення.llvm_value = LLVM::const_uint64(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      } інакше {
        обʼєкт_значення.тип = К.тип_позитивне;
        обʼєкт_значення.llvm_value = LLVM::const_uint64(К.L, дізнатись_розмір_типу(К, обʼєкт_типу));
      }
      вернути Результат { Обʼєкт { ВидОбʼєктаЗначення, дані = обʼєкт_значення }, помилка = пусто };
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_отримати_властивість_секції(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: комірка<ОбʼєктТипу>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість_секції");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_отримати_за_позицією(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, позиція: Обʼєкт, очікуваний_тип: комірка<ОбʼєктТипу>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_за_позицією");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_виконати(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось виконати");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_виконати_шаблон(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось виконати_шаблон");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_змінити_властивість(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_властивість");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_змінити_в_секції(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_в_секції");
    вернути Результат { помилка = помилка_компіляції };
  }
}

секція ц {
  місцева дія обʼєкт_типу_змінити_за_позицією(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, позиція: Аргумент, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_за_позицією");
    вернути Результат { помилка = помилка_компіляції };
  }
}