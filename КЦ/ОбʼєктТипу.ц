взяти визначення Ц;

секція ц {
  місцева дія обʼєкт_типу_додати(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось додати");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_відняти(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось відняти");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_помножити(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось помножити");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_поділити(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_поділити_за_модулем(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось поділити_за_модулем");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_більше(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_менше(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_більше_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось більше_рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_менше_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось менше_рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_не_рівно(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось не_рівно");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_зсунути_вліво(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вліво");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_зсунути_вправо(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_зсунути_вправо_знаковий(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось зсунути_вправо_знаковий");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_ді(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось ді");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_дабо(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось дабо");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_вабо(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось вабо");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_як(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось як");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_отримати_властивість(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: комірка<ОбʼєктТипу>): Результат {
    якщо перевірити_чи_тип_повний(К, обʼєкт_типу) == ні {
      ціль помилка_компіляції = виділити_помилку_компіляції_виявлено_неповний_тип(місцезнаходження, Обʼєкт { ВидОбʼєктаТипу, дані = обʼєкт_типу });
      вернути результат_помилка(помилка_компіляції);
    }
    якщо strcmp(назва, ю8"розмір") == 0 {
      ціль розмір_типу = дізнатись_розмір_типу(К, обʼєкт_типу);
//      біб::друк_позитивне(розмір_типу);
      ціль розмір_типу_як_ю8 = різне::числа::перетворити_позитивне_на_ю8(розмір_типу);
//      біб::друк_ю8(розмір_типу_як_ю8);
      ціль обʼєкт_сирого_значення: ОбʼєктСирогоЗначення;
      обʼєкт_сирого_значення.вид = ВидСирогоЗначенняЧисло;
      обʼєкт_сирого_значення.значення_числа = розмір_типу_як_ю8;
      вернути Результат { Обʼєкт { ВидОбʼєктаСирогоЗначення, дані = обʼєкт_сирого_значення }, помилка = пусто };
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_отримати_властивість_секції(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, очікуваний_тип: комірка<ОбʼєктТипу>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_властивість_секції");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_отримати_за_позицією(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, позиція: Аргумент, очікуваний_тип: комірка<ОбʼєктТипу>): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось отримати_за_позицією");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_виконати(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): Результат {
    якщо кількість_аргументів == 1 {
      ціль перший_аргумент = аргументи[0];
      ціль аргумент: Аргумент;
      аргумент.обʼєкт = Обʼєкт { ВидОбʼєктаТипу, дані = обʼєкт_типу };
      аргумент.місцезнаходження = місцезнаходження;
      вернути обʼєкт_як(перший_аргумент.обʼєкт, К, інформація_середовища, місцезнаходження, аргумент);
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось виконати");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_виконати_шаблон(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, кількість_аргументів: позитивне, аргументи: памʼять<Аргумент>): Результат {
    якщо обʼєкт_типу == К.тип_адреса {
      якщо кількість_аргументів != 1 {
        ціль помилка_компіляції = виділити_помилку_компіляції_невірна_кількість_аргументів_шаблону(місцезнаходження, 1, кількість_аргументів);
        вернути результат_помилка(помилка_компіляції);
      }
      ціль результат_компіляції_значення_аргумента = отримати_як_тип(К, інформація_середовища, аргументи[0].місцезнаходження, аргументи[0].обʼєкт, ні);
      якщо результат_компіляції_значення_аргумента.помилка != пусто {
        вернути результат_помилка(результат_компіляції_значення_аргумента.помилка);
      }
      ціль обʼєкт_типу_комірки = виділити<ОбʼєктТипу>();
      обʼєкт_типу_комірки.вид = ВидТипуАдреса;
      обʼєкт_типу_комірки.тип_адреси = результат_компіляції_значення_аргумента.обʼєкт_типу;
      обʼєкт_типу_комірки.llvm_type = LLVM::pointer(К.L);
      вернути Результат { Обʼєкт { ВидОбʼєктаТипу, дані = обʼєкт_типу_комірки }, помилка = пусто };
    }
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось виконати_шаблон");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_змінити_властивість(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_властивість");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_змінити_в_секції(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, назва: памʼять<п8>, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_в_секції");
    вернути результат_помилка(помилка_компіляції);
  }
}

секція ц {
  місцева дія обʼєкт_типу_змінити_за_позицією(обʼєкт_типу: комірка<ОбʼєктТипу>, К: комірка<Компілятор>, інформація_середовища: ІнформаціяСередовища, місцезнаходження: комірка<Місцезнаходження>, позиція: Аргумент, аргумент: Аргумент): Результат {
    ціль помилка_компіляції = виділити_помилку_компіляції(місцезнаходження, ю8"Не вдалось змінити_за_позицією");
    вернути результат_помилка(помилка_компіляції);
  }
}