секція ЛЛВМ {
  структура Модуль;
  структура Функція;
  структура Значення;
  структура Тип;
  структура БазовийБлок;
  структура ІнструкціяРозгалуження;
}

зовнішня дія __ЛЛВМ__ініціалізувати();
зовнішня дія __ЛЛВМ__деініціалізувати();
зовнішня дія __ЛЛВМ__створити_модуль(назва: адреса<ю8>, архітектура: натуральне, система: натуральне) -> адреса<ЛЛВМ::Модуль>;
зовнішня дія __ЛЛВМ__знищити_модуль(модуль: адреса<ЛЛВМ::Модуль>);
зовнішня дія __ЛЛВМ__створити_функцію(модуль: адреса<ЛЛВМ::Модуль>, видимість: натуральне, назва: адреса<ю8>, кількість_параметрів: натуральне, параметри: памʼять<адреса<ЛЛВМ::Тип>>, тип_результату: адреса<ЛЛВМ::Тип>) -> адреса<ЛЛВМ::Функція>;
зовнішня дія __ЛЛВМ__отримати_ір(модуль: адреса<ЛЛВМ::Модуль>, вихід_розміру: адреса<натуральне>, вихід_даних: адреса<памʼять<н8>>) -> логічне;

секція ЛЛВМ {
  дія ініціалізувати() {
    __ЛЛВМ__ініціалізувати();
  }

  дія деініціалізувати() {
    __ЛЛВМ__деініціалізувати();
  }

  дія створити_модуль(назва: ю8, архітектура: натуральне, система: натуральне) -> адреса<Модуль> {
    вернути __ЛЛВМ__створити_модуль(назва::адреса, архітектура, система);
  }

  дія знищити_модуль(модуль: адреса<Модуль>) {
    __ЛЛВМ__знищити_модуль(модуль);
  }

  дія створити_функцію(модуль: адреса<Модуль>, видимість: натуральне, назва: ю8, кількість_параметрів: натуральне, параметри: памʼять<адреса<Тип>>, тип_результату: адреса<Тип>) -> адреса<Функція> {
    вернути __ЛЛВМ__створити_функцію(модуль, видимість, назва::адреса, кількість_параметрів, параметри, тип_результату);
  }

  дія отримати_ір(модуль: адреса<Модуль>, вихід_розміру: адреса<натуральне>, вихід_даних: адреса<памʼять<н8>>) -> логічне {
    вернути __ЛЛВМ__отримати_ір(модуль, вихід_розміру, вихід_даних);
  }
}