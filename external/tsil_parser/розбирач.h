#ifndef TSIL_API
#define TSIL_API

using позитивне = size_t;

template <class T>
using памʼять = T*;

template <class T>
using адреса = T*;

#endif

extern "C" {
#define АСДВидНіщо 0
#define АСДВидПерезаписати 1
#define АСДВидЗвернутись 2
#define АСДВидОтримати 3
#define АСДВидОтриматиЗіСекції 4
#define АСДВидОтриматиЗаПозицією 5
#define АСДВидЗмінити 6
#define АСДВидЗмінитиВСекції 7
#define АСДВидЗмінитиЗаПозицією 8
#define АСДВидВиконати 9
#define АСДВидВиконатиШаблон 10
#define АСДВидЦіль 11
#define АСДВидДія 12
#define АСДВидСтруктура 13
#define АСДВидСинонім 14
#define АСДВидСинонімДія 31
#define АСДВидШаблон 15
#define АСДВидСекція 16
#define АСДВидЗначенняОбʼєкт 17
#define АСДВидЗначенняБезтиповийОбʼєкт 30
#define АСДВидЗначенняЧисло 18
#define АСДВидЗначенняТекст 19
#define АСДВидОперація 21
#define АСДВидЯкщо 22
#define АСДВидПоки 23
#define АСДВидВернути 24
#define АСДВидТипДії 25
#define АСДВидТипМасиву 26
#define АСДВидТипВаріація 32
#define АСДВидЗначенняЯкщо 27
#define АСДВидЯк 28
#define АСДВидСамоОперація 29
#define АСДВидВзяти 33
#define АСДВидМітка 34
#define АСДВидСтрибнути 35
#define АСДВидПерелік 36 // 36

#define АСДОпераціяМноження 1
#define АСДОпераціяДілення 2
#define АСДОпераціяМодуль 3
#define АСДОпераціяДодавання 4
#define АСДОпераціяВіднімання 5
#define АСДОпераціяЗсувВліво 6
#define АСДОпераціяЗсувВправо 7
#define АСДОпераціяЗсувВправоЗнаковий 8
#define АСДОпераціяМенше 9
#define АСДОпераціяБільше 10
#define АСДОпераціяМеншеРівне 11
#define АСДОпераціяБільшеРівне 12
#define АСДОпераціяРівне 13
#define АСДОпераціяНерівне 14
#define АСДОпераціяДІ 15
#define АСДОпераціяВАБО 16
#define АСДОпераціяДАБО 17
#define АСДОпераціяІ 18
#define АСДОпераціяАБО 19
#define АСДОпераціяЄ 20

#define АСДСамоОпераціяЛогічнеНі 1
#define АСДСамоОпераціяДвійковеНі 2
#define АСДСамоОпераціяПлюс 3
#define АСДСамоОпераціяМінус 4

#define АСДВидимістьЗовнішня 0
#define АСДВидимістьМісцева 1
#define АСДВидимістьВнутрішня 2

#define АСДМодифікаторЦіль 0
#define АСДМодифікаторЗмінна 1
#define АСДМодифікаторСтала 2

#define АСДТипЧислаАВТО 0
#define АСДТипЧислаЦ8 1
#define АСДТипЧислаЦ16 2
#define АСДТипЧислаЦ32 3
#define АСДТипЧислаЦ64 4
#define АСДТипЧислаП8 5
#define АСДТипЧислаП16 6
#define АСДТипЧислаП32 7
#define АСДТипЧислаП64 8
#define АСДТипЧислаД32 9
#define АСДТипЧислаД64 10

struct Місцезнаходження;
struct АСДЗначення;
struct СписокАСДЗначень;

struct Ідентифікатор;
struct Параметр;
struct АргументОбʼєкта;
struct ЕлементПереліку;

struct АСДДаніПерезаписати;
struct АСДДаніЗвернутись;
struct АСДДаніОтримати;
struct АСДДаніОтриматиЗіСекції;
struct АСДДаніОтриматиЗаПозицією;
struct АСДДаніЗмінити;
struct АСДДаніЗмінитиВСекції;
struct АСДДаніЗмінитиЗаПозицією;
struct АСДДаніВиконати;
struct АСДДаніВиконатиШаблон;
struct АСДДаніЦіль;
struct АСДДаніДія;
struct АСДДаніСтруктура;
struct АСДДаніСинонім;
struct АСДДаніСинонімДія;
struct АСДДаніШаблон;
struct АСДДаніСекція;
struct АСДДаніЗначенняОбʼєкт;
struct АСДДаніЗначенняБезтиповийОбʼєкт;
struct АСДДаніЗначенняЧисло;
struct АСДДаніЗначенняТекст;
struct АСДДаніОперація;
struct АСДДаніЯк;
struct АСДДаніЯкщо;
struct АСДДаніПоки;
struct АСДДаніВернути;
struct АСДДаніТипДії;
struct АСДДаніТипМасиву;
struct АСДДаніТипВаріація;
struct АСДДаніЗначенняЯкщо;
struct АСДДаніСамоОперація;
struct АСДДаніВзяти;
struct АСДДаніМітка;
struct АСДДаніСтрибнути;
struct АСДДаніПерелік;

struct ТекстКоду;
struct ПомилкаРозборуЦілі;
struct РезультатРозборуЦілі;

struct Місцезнаходження {
  адреса<ТекстКоду> текст_коду;
  позитивне рядок;
  позитивне стовпець;
};

struct АСДЗначення {
  позитивне вид;
  адреса<void> дані;
  адреса<Місцезнаходження> місцезнаходження;
};

struct СписокАСДЗначень {
  позитивне довжина;
  памʼять<адреса<АСДЗначення>> елементи;
};

struct Ідентифікатор {
  памʼять<char> значення;
  позитивне розмір_значення;
  адреса<Місцезнаходження> місцезнаходження;
};

struct Параметр {
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> тип;
  адреса<Місцезнаходження> місцезнаходження;
};

struct АргументОбʼєкта {
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> значення;
  адреса<Місцезнаходження> місцезнаходження;
};

struct ЕлементПереліку {
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДДаніСтруктура> структура_;
  адреса<Місцезнаходження> місцезнаходження;
};

struct АСДДаніПерезаписати {
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> значення;
};

struct АСДДаніЗвернутись {
  адреса<Ідентифікатор> ідентифікатор;
};

struct АСДДаніОтримати {
  адреса<АСДЗначення> обʼєкт;
  адреса<Ідентифікатор> ідентифікатор;
};

struct АСДДаніОтриматиЗіСекції {
  адреса<АСДЗначення> обʼєкт;
  адреса<Ідентифікатор> ідентифікатор;
};

struct АСДДаніОтриматиЗаПозицією {
  адреса<АСДЗначення> обʼєкт;
  адреса<АСДЗначення> позиція;
};

struct АСДДаніЗмінити {
  адреса<АСДЗначення> обʼєкт;
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> значення;
};

struct АСДДаніЗмінитиВСекції {
  адреса<АСДЗначення> обʼєкт;
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> значення;
};

struct АСДДаніЗмінитиЗаПозицією {
  адреса<АСДЗначення> обʼєкт;
  адреса<АСДЗначення> позиція;
  адреса<АСДЗначення> значення;
};

struct АСДДаніВиконати {
  адреса<АСДЗначення> обʼєкт;
  адреса<СписокАСДЗначень> аргументи;
};

struct АСДДаніВиконатиШаблон {
  адреса<АСДЗначення> обʼєкт;
  адреса<СписокАСДЗначень> аргументи;
};

struct АСДДаніЦіль {
  позитивне видимість;
  позитивне модифікатор;
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> тип;
  адреса<АСДЗначення> значення;
};

struct АСДДаніДія {
  позитивне видимість;
  адреса<Ідентифікатор> ідентифікатор;
  позитивне кількість_параметрів;
  памʼять<адреса<Параметр>> параметри;
  адреса<АСДЗначення> тип_результату;
  адреса<СписокАСДЗначень> тіло;
};

struct АСДДаніСтруктура {
  адреса<Ідентифікатор> ідентифікатор;
  позитивне кількість_параметрів;
  памʼять<адреса<Параметр>> параметри;
};

struct АСДДаніСинонім {
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> значення;
};

struct АСДДаніСинонімДія {
  адреса<Ідентифікатор> ідентифікатор;
  адреса<АСДЗначення> значення;
};

struct АСДДаніШаблон {
  адреса<Ідентифікатор> ідентифікатор;
  позитивне кількість_параметрів;
  памʼять<адреса<Ідентифікатор>> параметри;
  адреса<АСДЗначення> значення;
};

struct АСДДаніСекція {
  адреса<Ідентифікатор> ідентифікатор;
  адреса<СписокАСДЗначень> тіло;
};

struct АСДДаніЗначенняОбʼєкт {
  адреса<АСДЗначення> тип;
  позитивне кількість_аргументів;
  памʼять<адреса<АргументОбʼєкта>> аргументи;
  позитивне автозаповнення;
};

struct АСДДаніЗначенняБезтиповийОбʼєкт {
  позитивне кількість_аргументів;
  памʼять<адреса<АргументОбʼєкта>> аргументи;
  позитивне автозаповнення;
};

struct АСДДаніЗначенняЧисло {
  позитивне база;
  памʼять<char> значення;
  позитивне розмір_значення;
  позитивне тип;
  позитивне дробове;
};

struct АСДДаніЗначенняТекст {
  адреса<Ідентифікатор> ідентифікатор;
  памʼять<char> значення;
  позитивне розмір_значення;
};

struct АСДДаніОперація {
  адреса<АСДЗначення> ліво;
  позитивне операція;
  адреса<АСДЗначення> право;
};

struct АСДДаніЯк {
  адреса<АСДЗначення> значення;
  адреса<АСДЗначення> тип;
};

struct АСДДаніЯкщо {
  адреса<АСДЗначення> умова;
  адреса<СписокАСДЗначень> тіло;
  адреса<СписокАСДЗначень> тіло_інакше;
};

struct АСДДаніПоки {
  адреса<АСДЗначення> умова;
  адреса<СписокАСДЗначень> тіло;
};

struct АСДДаніВернути {
  адреса<АСДЗначення> значення;
};

struct АСДДаніТипДії {
  позитивне кількість_параметрів;
  памʼять<адреса<Параметр>> параметри;
  адреса<АСДЗначення> тип_результату;
};

struct АСДДаніТипМасиву {
  адреса<АСДЗначення> тип;
  адреса<АСДЗначення> розмір;
};

struct АСДДаніТипВаріація {
  адреса<СписокАСДЗначень> типи;
};

struct АСДДаніЗначенняЯкщо {
  адреса<АСДЗначення> умова;
  адреса<АСДЗначення> значення_так;
  адреса<АСДЗначення> значення_ні;
};

struct АСДДаніСамоОперація {
  позитивне операція;
  адреса<АСДЗначення> обʼєкт;
};

struct АСДДаніВзяти {
  адреса<Ідентифікатор> тип;
  позитивне довжина_шляху;
  памʼять<адреса<Ідентифікатор>> шлях;
  позитивне відносно;
};

struct АСДДаніМітка {
  адреса<Ідентифікатор> ідентифікатор;
};

struct АСДДаніСтрибнути {
  адреса<Ідентифікатор> ідентифікатор;
};

struct АСДДаніПерелік {
  адреса<Ідентифікатор> ідентифікатор;
  позитивне кількість_елементів;
  памʼять<адреса<ЕлементПереліку>> елементи;
};

struct ТекстКоду {
  памʼять<char> шлях;
  позитивне розмір_шляху;
  памʼять<char> значення;
  позитивне розмір_значення;
};

struct ПомилкаРозборуЦілі {
  адреса<Місцезнаходження> місцезнаходження;
  памʼять<char> повідомлення;
  позитивне розмір_повідомлення;
};

struct РезультатРозборуЦілі {
  позитивне успіх;
  адреса<СписокАСДЗначень> тіло;
  адреса<ПомилкаРозборуЦілі> помилка;
};

адреса<РезультатРозборуЦілі> розібрати_ціль(адреса<ТекстКоду> текст_коду);
}