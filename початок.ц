// концепт опису вбудованих типів компілятора і дій з ними

структура біт;

структура ц8 { біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i8"];
структура ц16 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i16"];
структура ц32 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i32"];
структура ц64 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i64"];

структура п8 { біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i8"];
структура п16 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i16"];
структура п32 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i32"];
структура п64 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"i64"];

структура д32 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"float"];
структура д64 { біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; біт; } [llvm_type=ю8"double"];

дія + ц8 ц8 = llvm { add i8 %0 %1 };
дія + ц8 ц16 = llvm { %2 = trunc %1 to i8; add i8 %0 %2 };
дія + ц8 ц32 = llvm { %2 = trunc %1 to i8; add i8 %0 %2 };
дія + ц8 ц64 = llvm { %2 = trunc %1 to i8; add i8 %0 %2 };

дія + ц8 п8 = llvm { add i8 %0 %1 };
дія + ц8 п16 = llvm { %2 = trunc %1 to i8; add i8 %0 %2 };
дія + ц8 п32 = llvm { %2 = trunc %1 to i8; add i8 %0 %2 };
дія + ц8 п64 = llvm { %2 = trunc %1 to i8; add i8 %0 %2 };

дія + ц8 д32 = llvm { %2 = fptosi %1 to i8; add i8 %0 %2 };
дія + ц8 д64 = llvm { %2 = fptosi %1 to i8; add i8 %0 %2 };

дія як ц8 ц16 = llvm { zext %0 to i16 };
дія як ц8 ц32 = llvm { zext %0 to i32 };
дія як ц8 ц64 = llvm { zext %0 to i64 };