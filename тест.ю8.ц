структура Система;

структура Система {
  дані: невідома_адреса;
  виділити_сиру_памʼять: (система: адреса<Система>, розмір: позитивне) -> памʼять<п8>;
  перевиділити_сиру_памʼять: (система: адреса<Система>, значення: памʼять<п8>, новий_розмір: позитивне) -> памʼять<п8>;
  звільнити_сиру_памʼять: (система: адреса<Система>, значення: невідома_памʼять) -> ніщо;
}

дія виділити<Т>(система: адреса<Система>): адреса<Т>;
дія перевиділити<Т>(система: адреса<Система>, значення: адреса<Т>, кількість: позитивне): памʼять<Т>;
дія звільнити(система: адреса<Система>, значення: невідома_адреса);
дія виділити_памʼять<Т>(система: адреса<Система>, кількість: позитивне): памʼять<Т>;
дія перевиділити_памʼять<Т>(система: адреса<Система>, значення: памʼять<Т>, кількість: позитивне): памʼять<Т>;
дія звільнити_памʼять(система: адреса<Система>, значення: невідома_памʼять);

дія виділити<Т>(система: адреса<Система>): адреса<Т> {
  вернути система.виділити_сиру_памʼять(система, Т.розмір) як адреса<Т>;
}

дія перевиділити<Т>(система: адреса<Система>, значення: адреса<Т>, кількість: позитивне): памʼять<Т> {
  вернути система.перевиділити_сиру_памʼять(система, значення як невідома_адреса, кількість * Т.розмір) як памʼять<Т>;
}

дія звільнити(система: адреса<Система>, значення: невідома_адреса) {
  система.звільнити_сиру_памʼять(система, значення як невідома_памʼять);
}

дія виділити_памʼять<Т>(система: адреса<Система>, кількість: позитивне): памʼять<Т> {
  вернути система.виділити_сиру_памʼять(система, кількість * Т.розмір) як памʼять<Т>;
}

дія перевиділити_памʼять<Т>(система: адреса<Система>, значення: памʼять<Т>, кількість: позитивне): памʼять<Т> {
  вернути система.перевиділити_сиру_памʼять(система, значення як памʼять<п8>, кількість * Т.розмір) як памʼять<Т>;
}

дія звільнити_памʼять(система: адреса<Система>, значення: невідома_памʼять) {
  система.звільнити_сиру_памʼять(система, значення);
}

дія а() {
  змінна ч = виділити<ц32>(пусто);
  вернути ч;
}