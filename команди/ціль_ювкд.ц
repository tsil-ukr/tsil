взяти біб цілеспрямовано;
взяти біб Виділяч;
взяти біб КД;
взяти визначення КЦ;

зовнішня дія __КЦ__прочитати_файл(виділяч: адреса<біб::Виділяч>, шлях: адреса<КЦ::Шлях>, вихід: адреса<КЦ::Байти>, вихід_успіху: адреса<логічне>);
зовнішня дія __КЦ__записати_файл(виділяч: адреса<біб::Виділяч>, шлях: адреса<КЦ::Шлях>, значення: адреса<КЦ::Байти>, вихід_успіху: адреса<логічне>);

місцева дія ціль_ювкд(виділяч: адреса<біб::Виділяч>,
                      опції_програми: цілеспрямовано::Опції<ю8>,
                      опції_команди: цілеспрямовано::Опції<ю8>,
                      вхід: ю8,
                      опції_входу: цілеспрямовано::Опції<ю8>,
                      вихід: ю8,
                      опції_виходу: цілеспрямовано::Опції<ю8>,
                      треба_знищити_залишки: логічне) -> ц32 {
  змінна статус: ц32 = 0;

  змінна шлях_входу = КЦ::Шлях { вхід.розмір, вхід.дані };
  змінна байти_входу = КЦ::Байти { 0, пусто };

  змінна успіх = ні;
  __КЦ__прочитати_файл(виділяч, шлях_входу::адреса, байти_входу::адреса, успіх::адреса);

  якщо не успіх {
    біб::вивести("Не вдалось прочитати файл ");
    біб::надрукувати_ю8(вхід);
    статус = 1;
    стрибнути завершення;
  }

  змінна значення_виходу = т8 { 0, пусто };
  змінна позиція_помилки: натуральне = 0;

  якщо не біб::перекодувати_ю8_в_т8(виділяч, ю8 { байти_входу.розмір, байти_входу.дані }, ні, ні, значення_виходу::адреса, пусто, позиція_помилки::адреса) {
    біб::вивести("Не вдалось перекодувати файл ");
    біб::надрукувати_ю8(вхід);
    статус = 1;
    стрибнути завершення;
  }

  якщо вихід.розмір == 0 {
    біб::вивести_байти(значення_виходу.розмір, значення_виходу.дані);
  } інакше {
    змінна шлях_виходу = КЦ::Шлях { вихід.розмір, вихід.дані };
    змінна байти_виходу = КЦ::Байти { значення_виходу.розмір, значення_виходу.дані };

    __КЦ__записати_файл(виділяч, шлях_виходу::адреса, байти_виходу::адреса, успіх::адреса);

    якщо не успіх {
      біб::вивести("Не вдалось записати файл ");
      біб::надрукувати_ю8(вихід);
      статус = 1;
      стрибнути завершення;
    }
  }

завершення:
  якщо треба_знищити_залишки {
    // ...
  }

  вернути статус;
}