зовнішня дія malloc(розмір: ц32): невідома_памʼять;
зовнішня дія putchar(значення: ц8): ц32;

структура Test {
  a: ц8;
  b: ц8;
  c: ц8;
  d: ц32;
}

дія виділити<Т>(кількість: ц32): памʼять<Т> {
  вернути malloc(кількість * Т.розмір) як памʼять<Т>;
}

//дія виділити<Т>(): комірка<Т> {
//  вернути виділити<Т>(1) як комірка<Т>;
//}

структура X;

секція ASCII {
  секція CODE {
    синонім NULL = 0;
    синонім START_OF_HEADING = 1;
    синонім START_OF_TEXT = 2;
    синонім END_OF_TEXT = 3;
    синонім END_OF_TRANSMISSION = 4;
    синонім ENQUIRY = 5;
    синонім ACKNOWLEDGE = 6;
    синонім BELL = 7;
    синонім BACKSPACE = 8;
    синонім HORIZONTAL_TAB = 9;
    синонім LINE_FEED = 10;
    синонім VERTICAL_TAB = 11;
    синонім FORM_FEED = 12;
    синонім CARRIAGE_RETURN = 13;
    синонім SHIFT_OUT = 14;
    синонім SHIFT_IN = 15;
    синонім DATA_LINK_ESCAPE = 16;
    синонім DEVICE_CONTROL_ONE = 17;
    синонім DEVICE_CONTROL_TWO = 18;
    синонім DEVICE_CONTROL_THREE = 19;
    синонім DEVICE_CONTROL_FOUR = 20;
    синонім NEGATIVE_ACKNOWLEDGE = 21;
    синонім SYNCHRONOUS_IDLE = 22;
    синонім END_OF_TRANSMISSION_BLOCK = 23;
    синонім CANCEL = 24;
    синонім END_OF_MEDIUM = 25;
    синонім SUBSTITUTE = 26;
    синонім ESCAPE = 27;
    синонім FILE_SEPARATOR = 28;
    синонім GROUP_SEPARATOR = 29;
    синонім RECORD_SEPARATOR = 30;
    синонім UNIT_SEPARATOR = 31;
    синонім SPACE = 32;
    синонім EXCLAMATION = 33;
    синонім QUOTE = 34;
    синонім HASH = 35;
    синонім DOLLAR = 36;
    синонім PERCENT = 37;
    синонім AMPERSAND = 38;
    синонім APOSTROPHE = 39;
    синонім OPEN_BRACKET = 40;
    синонім CLOSE_BRACKET = 41;
    синонім MULTIPLY = 42;
    синонім PLUS = 43;
    синонім COMA = 44;
    синонім MINUS = 45;
    синонім DOT = 46;
    синонім SLASH = 47;
    синонім ZERO = 48;
    синонім ONE = 49;
    синонім TWO = 50;
    синонім THREE = 51;
    синонім FOUR = 52;
    синонім FIVE = 53;
    синонім SIX = 54;
    синонім SEVEN = 55;
    синонім EIGHT = 56;
    синонім NINE = 57;
    синонім COLON = 58;
    синонім SEMICOLON = 59;
    синонім LESSER = 60;
    синонім GREATER = 61;
    синонім БІЛЬШЕ = 62;
    синонім QUESTION = 63;
    синонім AT = 64;
    синонім A = 65;
    синонім B = 66;
    синонім C = 67;
    синонім D = 68;
    синонім E = 69;
    синонім F = 70;
    синонім G = 71;
    синонім H = 72;
    синонім I = 73;
    синонім J = 74;
    синонім K = 75;
    синонім L = 76;
    синонім M = 77;
    синонім N = 78;
    синонім O = 79;
    синонім P = 80;
    синонім Q = 81;
    синонім R = 82;
    синонім S = 83;
    синонім T = 84;
    синонім U = 85;
    синонім V = 86;
    синонім W = 87;
    синонім X = 88;
    синонім Y = 89;
    синонім Z = 90;
    синонім OPEN_SQUARE_BRACKET = 91;
    синонім BACKSLASH = 92;
    синонім CLOSE_SQUARE_BRACKET = 93;
    синонім CARET = 94;
    синонім UNDERSCORE = 95;
    синонім GRAVE = 96;
    синонім a = 97;
    синонім b = 98;
    синонім c = 99;
    синонім d = 100;
    синонім e = 101;
    синонім f = 102;
    синонім g = 103;
    синонім h = 104;
    синонім i = 105;
    синонім j = 106;
    синонім k = 107;
    синонім l = 108;
    синонім m = 109;
    синонім n = 110;
    синонім o = 111;
    синонім p = 112;
    синонім q = 113;
    синонім r = 114;
    синонім s = 115;
    синонім t = 116;
    синонім u = 117;
    синонім v = 118;
    синонім w = 119;
    синонім x = 120;
    синонім y = 121;
    синонім z = 122;
    синонім OPEN_CURLY_BRACKET = 123;
    синонім VERTICAL_BAR = 124;
    синонім CLOSE_CURLY_BRACKET = 125;
    синонім TILDE = 126;
    синонім DELETE = 127;
  }

  синонім START_OF_VISIBLE = CODE::SPACE;
  синонім END_OF_VISIBLE = CODE::TILDE;
}

дія a();
дія a() {}
дія a(x: ц32);
дія a(x: ц32) {
  putchar(x як ц8);
}

структура Sta {
  a: ц8;
  b: ц8;
  c: ц8;
  d: ц8;
}

структура Stb {
  a: ц8;
}

структура Stc {
  a: Sta | Stb;
  b: Stb | Sta;
}

зовнішня дія main(): ц32 {
  змінна ціль wtf: Sta | Stb | Stc;
  синонім wStc = wtf як Stc;
  синонім wStc_a = (wtf як Stc).a як Sta;
  wtf = wtf як Stc;
  a(65ц32);
  wStc_a.b = ASCII::CODE::a;
  змінна ціль символ: ц8 = ASCII::START_OF_VISIBLE;
  поки символ <= ASCII::END_OF_VISIBLE {
    putchar(символ);
    символ = символ + 1;
  }
  putchar(ASCII::CODE::LINE_FEED);
  putchar(wStc_a.b);
  вернути 0;
}